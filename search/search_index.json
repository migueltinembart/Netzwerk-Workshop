{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Willkommen beim Netzwerk-Workshop","text":"<p>Willkommen zum Workshop Netzwerk und Kommunikationstechnik. Wir halten den Namen aber kurz und sagen einfach Netzwerk-Workshop.</p>"},{"location":"#aufbau-des-workshops","title":"Aufbau des Workshops","text":"<p>F\u00fcr den gesamten Workshop sind mehrere Kapitel in Ordner gegliedert. In diesen Kapiteln findest du dann schlussendlich .md files. Falls du nicht weisst was .md files sind siehe Markdown Guide. Dort sind dann alle Workshopunterlagen enthalten wie Dokumentation, Anleitungen, Literarische Dokumente f\u00fcrs Verst\u00e4ndnis, m\u00f6gliche Konfigurationen und mehr. F\u00fcr die sich die Dokumentation \u00fcbe den Browser anschauen, merken dass die Navigation vereinfachter dargestellt wird. Ausserdem bieten wir f\u00fcr die Dokumentation eine Suchfunktion (oben rechts). Bei Bedarf verweisen wir auf externe literarsiche Dokumenatitionen. Diese k\u00f6nnen f\u00fcr tiefgreifende Themen von nutzen sein, da hier in diesem Workshop die Praxiserfahrung im Mittelpunkt steht</p>"},{"location":"#wieso-markdown","title":"Wieso Markdown?","text":"<p>F\u00fcr technische Dokumentation zu einem Git Projekt wird in der Regel Markdown verwendet, da sie sehr leicht sind und mit wenigen Mitteln einfache und \u00fcberschaubare Formattierungen haben, welche im Web einfach vertr\u00e4glich sind. Die Dokumentationsseite welche du hier siehst ist genau so ein Beispiel. Um m\u00f6glichst viel Zeit mit schreiben und dokumentieren zu verbringen und m\u00f6glichst wenig davon f\u00fcr die Aufw\u00e4nde einer statischen Webseite aufzuwenden, wird meistens Markdown in irgendeiner Art und Form genutzt, da der Fokus weniger auf die Darstellung, sondern auf den Inhalt gesetzt werden kann.</p>"},{"location":"#quickstart","title":"Quickstart","text":"<p>Um dein Erlebnis im Workshop m\u00f6glichst einfach zu machen, schalgen wir vor du startest gleich bei 00_Voraussetzungen</p>"},{"location":"00_Voraussetzungen/","title":"Start","text":"<p>Um mit dem Workshop zu starten sind kleine aber doch wichtige Tools n\u00f6tig, damit deine Workshoperfahrung so einfach wie m\u00f6glich ist. Folgende Tools werden am meisten ben\u00f6tigt:</p> <ul> <li>Git</li> <li>Texteditor deiner Wahl</li> <li>Putty f\u00fcr Netzwerkswitches</li> </ul> <p>Nachdem du alle Tools die hier beschrieben sind installiert hast kannst du dich mal durch die ersten Dokumente ab Kapitel 01 Physical Layer lesen und verstehen versuchen.</p>"},{"location":"00_Voraussetzungen/01_Text-Editor_installieren/","title":"Text-Editor installieren","text":"<p>Der Standardtexteditor von Windows ist ganz ok... doch es geht auch besser. Falls du dich fragst wieso der Text-Editor auf einmal eine wichtige Rolle spielt, wirst du in diesem Workshop merken dass, wir sehr start auf eine gute Umgebung mit Integration f\u00fcr Git angewiesen sind. Wieso also nicht gleicht das richtige Tool installieren f\u00fcr den Job. Die Wahl \u00fcberlasse ich dir und stelle dir mal 3 Text-Editoren vor, welche ich \u00fcber den eingebauten Text-Editor von Windows bevorzugen w\u00fcrde.</p>"},{"location":"00_Voraussetzungen/01_Text-Editor_installieren/#visual-studio-code","title":"Visual Studio Code","text":"<p>Nicht mit Visual Studio verwechseln! Visual Studio Code wurde von Microsoft als Open Source Projekt ver\u00f6ffentlicht bietet obendrein die n\u00f6tigsten Features f\u00fcr Entwickler aller Art. Fehlende Funktionalit\u00e4t kann \u00fcber das Erweiterungsmenu installiert werden und bietet Support f\u00fcr viele Entwicklungsumgebungen und Tools wie:</p> <ul> <li>SVN</li> <li>Python</li> <li>YAML</li> <li>Prettier f\u00fcr Textformattierungen</li> <li>docker</li> </ul> <p>VS Code integriert auch schon eine Git-Erweiterung. So hast du Versionen in Git direkt neben deinem Editor.</p> <p>Download Visual Studio Code</p>"},{"location":"00_Voraussetzungen/01_Text-Editor_installieren/#sublime-text","title":"Sublime Text","text":"<p>Sublime Text ist ein minimalistisch gehaltener, jedoch sehr starker Text-Editor mit vielen Funktionen f\u00fcr die vereinfachte Text und Codeverarbeitung. Sublime ist leichtgewichtiger und somit eher performanter unterwegs als sein Gegner bei Microsoft, bietet daf\u00fcr aber weniger Integrationen als VS Code. Denen die VS Code etwas zu wuchtig ist um nur Code und Text zu editieren. F\u00fcr die Git Integration bietet Sublime ein zus\u00e4tzliches Programm namens Sublime Merge.</p> <p>Sublime kannst du hier herunterladen und installieren</p>"},{"location":"00_Voraussetzungen/01_Text-Editor_installieren/#notepad","title":"Notepad++","text":"<p>Notepad++ ist ein Klassiker unter den besseren Notepads. Wie auch die anderen Text-Editoren in dieser Liste, unterst\u00fctzt Notepad++ den Support f\u00fcr LSPs f\u00fcr die Code formattierung, ist aber im Funktionsumfang eher in die Jahre gekommen. Daf\u00fcr geniesst Notepad++ seit Jahren das Vertrauen vieler und funktioniert wie erwartet extrem stabil.</p> <p>Falls du nicht auf solche Feature angewiesen bist, kannst du dir gerne deine Version hier selber herunterladen.</p>"},{"location":"00_Voraussetzungen/02_Git_installieren/","title":"Git instillieren","text":"<p>Git ist ein Versionierungstool, \u00e4hnlich wie SVN, welches den Fokus auf lokale Entwicklung und Kontrolle von textbasierten Files bietet. Git ist heute das meistverwendete Versionierungstool das es gibt. Git darf nicht mit Github verwechselt werden. Github ist ein Git Repository Provider und falls es dir nicht aufgefallen ist, liest du gerade dieses Dokument auf Azure DevOps, einem Konkurenzprodukt zu Github. Damit du im Workshop auf deiner lokalen Maschine mit den Tools arbeiten kannst die in diesem Workshop ersichtlich sind, wirst du somit Git brauchen um eine Kopie dieses Git Repositories auf deinen Rechner zu verwalten. Also starten wir mal mit der Installation:</p>"},{"location":"00_Voraussetzungen/02_Git_installieren/#installation-in-windows","title":"Installation in Windows","text":"<p>F\u00fcr windows kann Git \u00fcber 2 Wege installiert werden. Je nach Arbeitsumgebung lohnt sich f\u00fcr dich die eine oder andere Installation und und die Vor und Nachteile werden hier beschrieben</p>"},{"location":"00_Voraussetzungen/02_Git_installieren/#installation-nativ","title":"Installation nativ","text":"<p>Die native Installation auf Windows ist perfekt f\u00fcr Nutzer die nicht auf Linuxumgebungen angewiesen sind und ihre Umgebungsvariabeln nicht getrennt halten m\u00fcssen. Das heisst, f\u00fcr Softwareentwickler oder Mitabeiter die keine Scripts auf linux\u00e4hnlichen Umgebungen testen m\u00fcssen w\u00fcrde ich raten diese Installation zu bevorzugen, da kein Mehrwert erreicht wird falls du eine Installation mit WSL bevorzugen w\u00fcrdest.</p> <p>Die neuste Version von Git kannst du hier herunterladen.</p> <p>Leider ist Git zum installieren auf Windows nicht die sch\u00f6nste Erfahrung, doch zum Gl\u00fcck bietet der Installer alle wichtigen Einstellungen um die Installation auf die meisten Bed\u00fcrfnisse abzustimmen.</p> <p>Git wird dich w\u00e4hrend der Installation einige Fragen stellen welche am einfachsten schon w\u00e4hrend der Installation eingerichtet werden, da Git sonst nur mit der Kommandozeile angepasst werden kann. ich stelle dir am Ende des Kapitels aber noch 1 Tool vor welches dir dein Leben mit Git etwas einfacher gestaltet.</p> <p>Folgende Punkte m\u00fcssen w\u00e4hrend der Installation beachtet werden somit beachtet werden:</p> <ul> <li>Der Standard Code-Editor kannst du auf deinen preferierten Editor setzen. Falls du vorhin einen neuen Code Editor im Kapitel Text_Editor_installieren installiert hast, kannst du dieses gleich als Standard hier einstellen</li> <li>Setze deinen initial branch f\u00fcr neue Projekte auf main</li> <li>Lasse die Einstellungen f\u00fcr den GIT Pfad so wie er ist und \u00e4ndere dor nichts, sonst l\u00e4ufst du Gefahr dass andere Git Tools deine Git Installation nicht finden kann.</li> <li>Verwende die standard openSSH und openSSL Bibliotheken von Git</li> <li>Line Ending Einstellungen =&gt; Checkout Windows-style , Commit Unix-style</li> <li>\u00c4ndere den Terminal Emulator auf Windows Default</li> <li>Git Pull Einstellungen =&gt; fast-forward or merge</li> <li>Verwende den Git credential Manager</li> <li>Enable file system caching =&gt; ja</li> </ul> <p>Wenn du sichergestellt hast dass alle Menupunkte wie oben beschrieben eingestellt wurden kannst du die Installation ausf\u00fchren. Git ist nun auf deinem Rechner installiert</p>"},{"location":"00_Voraussetzungen/02_Git_installieren/#installation-auf-windows-mit-wsl","title":"Installation auf Windows mit WSL","text":"<p>Nach dem Einzug von Windows in die Welt von Open Source, hat Windows WSL entwickelt. WSL steht f\u00fcr Windows Subsystem for Linux und erm\u00f6glicht es ein Linux Subsystem auf Windows zu betreiben. Windows hat daf\u00fcr eigene Kernelimplementationen f\u00fcr ihre Systeme geschrieben um bekannte Distributionen wie Ubuntu, openSUSE, Kali Linux, Debian, Oracle Linux und viele weitere zu installieren. Dabei erh\u00e4lt das Subsystem ein eigenes virtuelles Laufwerk mit welches du auch \u00fcber dein Subsystem auf deine Windows Umgebung zugreifen kannst. Doch am ehesten wird WSL heute in der Entwicklung und Containerisierung von Applikationen verwendet.</p> <p>Je nach Distribution ist Git schon installiert. Am einfachsten \u00fcberpr\u00fcfst du ob git bei deiner Installation schon dabei ist in dem du in deinem WSL-Terminal einfach <code>git</code> schreibst...</p> <p>Falls du die Man-Page (Anleitung) zur Nutzung von git bekommst, ist git bei deiner Distribution bereits schon installiert</p> <p>Falls aber eine meldung kommt wie <code>bash: command not found: git</code>, dann ist Git auf dieser Distribution nicht vorhanden. Installiere somit mit dem Package Manager deiner Distribution einfach kurz git und du bist schon einsatzbereit.</p>"},{"location":"00_Voraussetzungen/02_Git_installieren/#optional","title":"Optional","text":"<p>Git an sich ben\u00f6tigt keine Benutzerangaben des Users, ausser bei einer Sache. Commits. Damit Git weiss wer an welchem File \u00c4nderungen gemacht hat, musst du Git halt sagen wer du bist und was f\u00fcr eine E-Mail Adresse du besitzt. So kann Git diese Informationen immer auf die Commits als Metadaten ablegen und erm\u00f6glicht es dir bei \u00c4nderungen an Files zu sehen, wo und wer diese \u00c4nderungen gemacht hat.</p> <p>Den Benutzernamen und deine Email kannst du wie folgt f\u00fcr Git setzen: <pre><code>git config --global user.name Benutzername\ngit config --global user.email deine-email@contoso.com\n</code></pre> Ersetze dabei die Felder Benutzername durch deine Angaben und schon kannst du herumcommiten wie dein Herz begehrt.</p>"},{"location":"00_Voraussetzungen/02_Git_installieren/#weitere-angaben","title":"Weitere Angaben","text":"<p>Falls du Git und seine Essenz lernen m\u00f6chtest, biete ich dir ein paar Referenzseiten an. Beachte das Git f\u00fcr diesen Workshop nur f\u00fcr die initiale Kopie des Workshops ben\u00f6tigt wird. Trotzdem hier ein paar Beispiele:</p> <ul> <li>Learn Git Branching interaktives Tutorial</li> <li>CodeCademy ist gratis und anf\u00e4ngerfreundlich</li> <li>Du kommst bei Miguel vorbei und fragst ihn nach seinem Buch \u00fcber Git</li> </ul>"},{"location":"00_Voraussetzungen/03_Putty_installieren/","title":"Putty installieren","text":"<p>Putty zu installieren ist genauso einfach wie die Installation eines Text-Editors. Lade den Installer (https://the.earth.li/~sgtatham/putty/latest/w64/putty-64bit-0.79-installer.msi)[hier] herunter und installiere durch best\u00e4tigen jedes Kontext-Menus bi sPutty installiert ist.</p>"},{"location":"00_Voraussetzungen/03_Putty_installieren/#was-ist-putty","title":"Was ist Putty","text":"<p>Damit man Putty einfacher verwenden kann, muss evtl. zuerst verstanden werden was Putty genau ist.</p> <p>Putty tr\u00e4gt den Namen, weil die 3 letzten Buchstaben f\u00fcr TTY stehen. TTY (Teleprinter oder TeletypeWriter) waren fr\u00fcher Computer welche \u00fcber eine Telefonleitung Textnachrichten an ein fernes System \u00fcbermitteln konnten. Das heistt die Anzeige und die Eingabe erfolgte dabei \u00fcber ein Terminal. Den Namen Terminal f\u00fcr Konsoleumgebungen wurde heute f\u00fcr verschiedene Anwenungen welches auf dem selben Prinzip arbeiteten verwendet. Heutzuttage kennt man das Terminal vorallem in Linuxumgebungen, aber auch Windows ist seit j\u00fcngster Zeit mit einem Terminal ausgestattet.</p> <p>Die heutigen modernen Terminalemulatoren wie Putty k\u00f6nnen \u00fcber verschiedene Protokolle eine tty-session starten. Darunter z\u00e4hlen SSH, telnet oder serial zu einer der meistgenutzten Protokolle und Umgebungen in denen Putty Abhilfe schafft.</p>"},{"location":"00_Voraussetzungen/03_Putty_installieren/#wieso-putty-und-nicht-das-neue-windows-terminal","title":"Wieso Putty und nicht das neue Windows Terminal","text":"<p>Das neue Windows Terminal besitzt einen SSH Client, doch basiert dieser auf SSH2.0 und ist mit neuen Verschl\u00fcsselungsformaten ausgestattet. Somit ist dieser Terminalemulator f\u00fcr die meisten heutzutagsverwenden F\u00e4lle eine valide Abl\u00f6se f\u00fcr Putty. Doch \u00e4ltere Ger\u00e4te welche vorallem auf \u00e4ltere Verschl\u00fcsselungstechnologien wie diffie-hellman und weiteres angewiesen sind, werden durch SSH2.0 nicht mehr unterst\u00fctzt. Dies nat\u00fcrlich aus dem Grund der Sicherheit, da solche Protokolle nicht mehr in heutigen produktiven Endger\u00e4ten eingesetzt werden. Leider k\u00f6nnen wir das Problem, bei vielen Kunden nicht durch einen Systemaustausch einfach so l\u00f6sen und die meisten Systeme welche \u00fcber SSH erreichbar sind, sind in der Regel nicht im Internet erreichbar.</p> <p>Ger\u00e4te welche evtl. mit alten SSH Verschl\u00fcsselungsprotokollen arbeiten sind:</p> <ul> <li>Switches</li> <li>Router</li> <li>Firewalls</li> <li>Access Points</li> <li>\u00c4ltere Linux Maschinnen welche noch keinen Support f\u00fcr SSH 2.0 besitzen</li> </ul>"},{"location":"00_Voraussetzungen/03_Putty_installieren/#verwenden-von-putty","title":"Verwenden von Putty","text":"<p>Nach der Installation kannst du Putty gerne starten. Folgendes Fenster wird dir dann angezeigt.  Zu beachten gibt es da eigentlich noch nicht viel. In der Regel kommt der Startbildschirm mit Fokus auf die Eingabe einer IP-Adresse. Im selben Bereich werden auch die verschiedenen Verbindungstypen dargestellt, darunter SSH, Telnet und Serial. In 99% der F\u00e4lle wirst du meistens nur eine SSH Verbingung ben\u00f6tigen und kannst somit dich direkt auf die Ziel-IP-Adresse des Endger\u00e4ts st\u00fcrzen. F\u00fcr alle anderen F\u00e4lle wird dringend Erfahrung mit den verschiedenen Verbindungstypen ben\u00f6tigt.</p>"},{"location":"01_Physical_Layer/","title":"Einleitung","text":"<p>F\u00fcr die \u00dcbertragung von Signalen und Daten jeglicher Art ist uns allen sicher aufgefallen dass wir ein \u00dcbertragunsmedium irgendeiner Art ben\u00f6tigen. 3 \u00dcbertragungsmedien sind uns bekannt</p> <ul> <li>Kupfer</li> <li>Licht</li> <li>Luft</li> </ul> <p>Mit diesen \u00dcbertragunsmedien kommen wir t\u00e4glich in Verbindung. In Datencenter gehen t\u00e4glich unbeschreibeliche Mengen an Daten durch Kupfer und LWL Verbindungen durch. Zuhause und unterwegs kannst du mit deinem Smartphone \u00fcber die Luft problemlos Youtube unterbrechungsfrei Werbung Videos in Full-HD Qualit\u00e4t betrachten. Fr\u00fcher bevor das Internet einen solchen Stellenwert hatte wie heute, versuchten Firmen und Insitutionen standardisierte Wege zu finden um ihre Kabel, Dr\u00e4hte und Funkwellen bestm\u00f6glichst zu \u00fcbertragen. Die internationale Organisation f\u00fcr Normung, kurz ISO, definierte dabei schon zu diesen Zeiten unsere Standards, welche die \u00dcbertragunsmedien standardisierte, welche heute tagt\u00e4glich gebraucht werden.</p>"},{"location":"01_Physical_Layer/Kupfer/","title":"Kupfer\u00fcbertragungsmedien","text":"<p>Kupfer hat sich in der heutigen Zeit als schnelles \u00dcbertragungsmedium etabliert. Sie bieten kostentechnisch den besten Mehrwert und bieten durch ihre physikalische Beschaffenheit stabilit\u00e4t vor St\u00f6ssen und Rissen. Physische Limitationen sind heute fast nicht zu erkennen, obwohl doch einige dieser Nachteile stets vorhanden sein werden. Noch mals kurzaufgef\u00fchrt die wichtigsten Merkmale von Kupfer als \u00dcbertragungsmedium:</p> <ul> <li>Unkompliziert in der Anwendung und Verarbeitung</li> <li>Sicher for St\u00f6ssen und anderen physischen Ausseneinfl\u00fcssen</li> <li>Gute \u00dcbertragsunl\u00e4ngen je nach Kabeltyp (z.B. 100m bei Twisted Pair)</li> <li>Kann durch elektromagenische St\u00f6felder belastet werden</li> </ul>"},{"location":"01_Physical_Layer/Kupfer/#twisted-pair-verbindungen","title":"Twisted Pair Verbindungen","text":"<p>Twisted-Pair-Kabel bestehen aus zwei oder mehr Adern, die miteinander verdrillt sind. In einem klassischem UKV/EDV Kabel sind meistens 4 Aderpaare vorhanden und sind gem\u00e4ss ISO/IEC 11801 genormt.</p> <p></p>"},{"location":"01_Physical_Layer/Kupfer/#wissenschaft-dahinter","title":"Wissenschaft dahinter","text":"<p>Die Verdrillung hat zwei wesentliche Vorteile:</p> <p>Sie verringert das \u00dcbersprechen zwischen den Adernpaaren. Sie bietet einen besseren Schutz vor elektrischen und magnetischen St\u00f6rfeldern. Das \u00dcbersprechen entsteht, wenn sich die elektrischen Felder zweier Adern \u00fcberlagern. Dies kann zu Signalst\u00f6rungen f\u00fchren. Die Verdrillung der Adernpaare verringert das \u00dcbersprechen, indem sie die elektrischen Felder der beiden Adern in entgegengesetzte Richtungen lenkt.</p> <p>Die Verdrillung bietet auch einen gewissen Schutz vor elektrischen und magnetischen St\u00f6rfeldern. Elektrische St\u00f6rfelder k\u00f6nnen sich durch die Verdrillung der Adern nicht so leicht \u00fcbertragen. Magnetische St\u00f6rfelder k\u00f6nnen die Verdrillung der Adern ebenfalls beeinflussen, aber der Effekt ist in der Regel geringer als bei parallel gef\u00fchrten Adern.</p> <p>Bekannte Kabel mit Twisted Pair Dr\u00e4hten sind:</p> <ul> <li>UKV/EDV Verbindungen und deren Patchkabel</li> <li>analoge und digitale Telefonleitungen</li> </ul>"},{"location":"01_Physical_Layer/Kupfer/#kategorien-und-klassen-bei-ukvedv-verbindungen","title":"Kategorien und Klassen bei UKV/EDV Verbindungen","text":"<p>UKV Kabel weisen immer die Kategorie des Kabels auf. Die Kategorie beschreibt die technische Spezifikation einer Komponente in Zusammenhang mit der Erstellungsqualit\u00e4t eines solchen Kabels. Die Normen f\u00fcr die Kategorien werden in ISO/IEC 11801.</p> <p>Der Unterschied von Klassen und Kategoerien geht wie folgt:</p> <ul> <li>Klassen beschreiben das gesammte Kabel von Ende zu Ende</li> <li>Kategorien beschreiben die einzelnen Komponenten in einem Kabel, kann aber wenn alle Komponenten gleichwertig sind auf das Kabel mittels Klassen \u00fcbertragen werden</li> </ul>"},{"location":"01_Physical_Layer/Kupfer/#schirmung","title":"Schirmung","text":"<p>Da Twisted Pair Kabel den nat\u00fcrlichen Gesetzen des Elektromagnetismus ausgesetzt sind, k\u00f6nnen \u00e4ussere St\u00f6reinfl\u00fcsse die Qualit\u00e4t des Signals stark beintr\u00e4chtigen. In vielen industriellen Gebeiten werden heutzutags nur noch geschirmte Twisted Pair Kabel verwendet. Denn diese bieten folgende Vorteile gegen\u00fcber nichtgeschirmten Kabeln:</p> <ul> <li>Das \u00dcbersprechen zwischen Kabeln wird verringert</li> <li>elektromagnetische Interferenzen vom Kabel werden andere Kabel sch\u00e4cher weiter\u00fcbertragen</li> </ul> <p>Folgende Formen von geschirmten Twisted-Pair Verkabelungen sind m\u00f6glich</p> <ul> <li>Schrimung mit Folie</li> <li>Schirmung mit Drahtschirmen</li> </ul> <p>Kabelbezeichnung werden von Herstellern somit in folgender Form kombiniert</p> <ul> <li>TP f\u00fcr Twisted Pair</li> <li>S f\u00fcr Schirm (drahtgeflecht)</li> <li>F f\u00fcr Schirm mit Folie als Mantel</li> </ul> <p>Diese Bezeichnung werden dann zusammen zu einer Bezeichnung der Charakteristik angewandt. Ein Kabel welches als FTP-Kabel verkauft wird, besitzt dabei f\u00fcr jedes Aderpaar eine Folie zur Schirmung. ein S/FTP bietet zus\u00e4tzlich ein drahtgefelcht um alle Aderpaare f\u00fcr eine zus\u00e4tzliche Abschirmung. </p>"},{"location":"01_Physical_Layer/Kupfer/#vorteile","title":"Vorteile","text":"<p>Das Prinzip von UKV/EDV hat sich heutzutage etabliert und das Rad muss somit nicht neu erfunden werden. Mit heutigen Patchkabeln und UKV-Verkabelungen der Kategorie 6a lassen sich schon Verbindungen f\u00fcr 10Gbit/s realisieren. Handels\u00fcbliche Netzwerkger\u00e4te unterst\u00fctzden die Steckerarchitektur mit RJ45 schon seit anbeginn der ersten Ethernetf\u00e4higen Swtiches und Routern und wird auch in den n\u00e4chsten Jahr seinen Stellenwert f\u00fcr Netzwerke nicht verlieren.</p> <p>Folgendes sind Vorteile f\u00fcr eine Twisted-Pair Verkabelung:</p> <ul> <li>Kosteng\u00fcnstige Anschaffungskosten</li> <li>Kompatibel mit den meisten Netzwerkger\u00e4ten</li> <li>Installation der Kabel ist einfacher</li> </ul>"},{"location":"01_Physical_Layer/Kupfer/#koaxiale-verbindungen","title":"Koaxiale Verbindungen","text":"<p>Koaxiale Kabel sind 2 polige Kabel mit einem einfachen Aufbau. Einem Innenleiter und einem Aussenleiter. Dieser Aufbau ist konzenrisch, d.h. die Auslagerung der Verbindungen vom Zentrum gesehen immer symmetrisch aufgebaut ist. </p> <p> </p> <p>Folgend ein kurzes Aufbauprinzip:</p> <ol> <li>Innenleiter</li> <li>isolierendes Dielektrikum</li> <li>Aussenleiter und Abschirmung</li> <li>Schutzmantel</li> </ol> <p>Zu beachten ist, dass im Falle eines Koaxialkabels der Aussenleiter gleichzeit als Schirm verwendet wird. </p>"},{"location":"01_Physical_Layer/Kupfer/#vorteile_1","title":"Vorteile","text":"<p>Durch den erh\u00f6hten Abstand des Aussen- und Innenleiters durch das Dielektrikum sind St\u00f6reinfl\u00fcsse durch elektrische Felder einfacher gesch\u00fctzt und mit dem Aussenleiter als Schirm werden elektromagnetische Interferenzen zus\u00e4tzlich abgefangen. Durch den Aufbau sind Koaxiale Verbindungen vorallem bei hochfrequenten Verbindungen beliebt. Bei manchen Kabeltypen sind sogar Frequenzen von 110GHz m\u00f6glich. Somit k\u00f6nnen Internetprovider welche \u00fcber Koaxiale Verbindungen ihre Infrastruktur f\u00fcr ihre Kunden zur Verf\u00fcgung stellen trotz der Limitationen von Kupferverbindungen, schnelle Bandbreiten f\u00fcr ihre Kunden anbieten.</p>"},{"location":"01_Physical_Layer/LWL/","title":"LWL","text":"<p>Lichtwellenleiter, auch bekannt als Glasfaserkabel, sind eine Schl\u00fcsseltechnologie in modernen Kommunikationsnetzwerken. Sie verwenden Licht zur \u00dcbertragung von Daten und sind in zwei Haupttypen unterteilt: Single-Mode und Multi-Mode.</p>"},{"location":"01_Physical_Layer/LWL/#aufbau-von-lichtwellenleitern","title":"Aufbau von Lichtwellenleitern","text":"<p>Ein Lichtwellenleiter besteht aus mehreren Schichten:</p> <ol> <li> <p>Kern (Core): Dies ist der innere Teil des Lichtwellenleiters, durch den das Licht gef\u00fchrt wird. Der Kern besteht aus Glas oder Kunststoff mit einer hohen Brechzahl.</p> </li> <li> <p>Mantel (Cladding): Dies ist die Schicht, die den Kern umgibt. Der Mantel hat eine niedrigere Brechzahl als der Kern, was dazu f\u00fchrt, dass das Licht im Kern bleibt und entlang des Lichtwellenleiters gef\u00fchrt wird. Dieses Ph\u00e4nomen wird als Totalreflexion bezeichnet.</p> </li> <li> <p>Puffer (Buffer): Dies ist eine Schutzschicht, die den Mantel umgibt. Sie sch\u00fctzt den Lichtwellenleiter vor physischen Sch\u00e4den und Umwelteinfl\u00fcssen.</p> </li> <li> <p>Au\u00dfenmantel (Jacket): Dies ist die \u00e4u\u00dfere Schicht des Lichtwellenleiters. Sie sch\u00fctzt vor Umwelteinfl\u00fcssen wie Feuchtigkeit, Chemikalien und physischen Sch\u00e4den.</p> </li> </ol>"},{"location":"01_Physical_Layer/LWL/#single-mode","title":"Single-Mode","text":"<ul> <li>Vorteile: Sie k\u00f6nnen Daten \u00fcber sehr lange Distanzen (mehrere Kilometer) \u00fcbertragen, da sie weniger Signalverlust und Dispersion aufweisen. Sie sind ideal f\u00fcr Telekommunikationsnetze und Datenzentren mit mehreren Standorten.</li> <li>Nachteile: Sie sind teurer in der Anschaffung und Installation. Au\u00dferdem ben\u00f6tigen sie spezielle Laser-Sender, die teurer sind als die LED-Sender, die in Multi-Mode Kabeln verwendet werden.</li> </ul> <p>In einer Single-Mode Lichtwellenleiter (LWL) wird das Licht zur Signal\u00fcbertragung auf folgende Weise verwendet:</p> <p>Erzeugung des Lichtsignals: Ein Laser erzeugt ein Lichtsignal, das die zu \u00fcbertragenden Daten repr\u00e4sentiert. Die Daten werden in Form von Lichtimpulsen codiert, wobei die An- und Abschaltzeiten des Lasers die Bits der Daten repr\u00e4sentieren.</p> <p>Einkopplung in den LWL: Das erzeugte Lichtsignal wird in den Kern des Lichtwellenleiters eingekoppelt. Da der Kern eines Single-Mode LWL sehr d\u00fcnn ist (typischerweise etwa 9 Mikrometer), kann das Licht nur in einer einzigen Mode, also geradlinig, durch den LWL gef\u00fchrt werden.</p> <p>\u00dcbertragung durch den LWL: Das Lichtsignal wird durch den Kern des LWL gef\u00fchrt. Aufgrund der h\u00f6heren Brechzahl des Kerns im Vergleich zum Mantel wird das Licht im Kern gehalten und entlang des LWL gef\u00fchrt. Dieses Ph\u00e4nomen wird als Totalreflexion bezeichnet.</p> <p>Empfang des Lichtsignals: Am Ende des LWL wird das Lichtsignal von einem Empf\u00e4nger, z.B. einem Photodetektor, aufgenommen. Der Empf\u00e4nger wandelt das Lichtsignal wieder in elektrische Signale um, die dann von der Empfangseinheit weiterverarbeitet werden k\u00f6nnen.</p> <p>Es ist wichtig zu beachten, dass Single-Mode LWL aufgrund ihrer geringen Kerngr\u00f6\u00dfe und der Verwendung von Lasern eine h\u00f6here Bandbreite und eine geringere Signalverzerrung aufweisen als Multi-Mode LWL. Daher k\u00f6nnen sie Daten \u00fcber sehr lange Distanzen \u00fcbertragen.</p>"},{"location":"01_Physical_Layer/LWL/#multi-mode","title":"Multi-Mode","text":"<ul> <li>Vorteile: Sie sind kosteng\u00fcnstiger in der Anschaffung und Installation. Sie verwenden LED-Sender, die billiger und einfacher zu handhaben sind. Sie sind ideal f\u00fcr kurze Distanzen, wie z.B. innerhalb eines Geb\u00e4udes oder Campus.</li> <li>Nachteile: Sie k\u00f6nnen Daten nur \u00fcber kurze Distanzen (bis zu ein paar Kilometer) \u00fcbertragen, da sie mehr Signalverlust und Dispersion aufweisen. Sie sind nicht geeignet f\u00fcr Anwendungen, die eine \u00dcbertragung \u00fcber lange Distanzen erfordern.</li> </ul> <p>In einer Multi-Mode Lichtwellenleiter (LWL) wird das Licht zur Signal\u00fcbertragung auf folgende Weise verwendet:</p> <p>Erzeugung des Lichtsignals: Eine LED (Licht emittierende Diode) oder manchmal auch ein Laser erzeugt ein Lichtsignal, das die zu \u00fcbertragenden Daten repr\u00e4sentiert. Die Daten werden in Form von Lichtimpulsen codiert, wobei die An- und Abschaltzeiten der LED oder des Lasers die Bits der Daten repr\u00e4sentieren.</p> <p>Einkopplung in den LWL: Das erzeugte Lichtsignal wird in den Kern des Lichtwellenleiters eingekoppelt. Da der Kern eines Multi-Mode LWL breiter ist (typischerweise 50 oder 62,5 Mikrometer), kann das Licht in mehreren Moden, also nicht nur geradlinig, sondern auch in verschiedenen Winkeln, durch den LWL gef\u00fchrt werden.</p> <p>\u00dcbertragung durch den LWL: Das Lichtsignal wird durch den Kern des LWL gef\u00fchrt. Aufgrund der h\u00f6heren Brechzahl des Kerns im Vergleich zum Mantel wird das Licht im Kern gehalten und entlang des LWL gef\u00fchrt. Dieses Ph\u00e4nomen wird als Totalreflexion bezeichnet.</p> <p>Empfang des Lichtsignals: Am Ende des LWL wird das Lichtsignal von einem Empf\u00e4nger, z.B. einem Photodetektor, aufgenommen. Der Empf\u00e4nger wandelt das Lichtsignal wieder in elektrische Signale um, die dann von der Empfangseinheit weiterverarbeitet werden k\u00f6nnen.</p> <p>Es ist wichtig zu beachten, dass Multi-Mode LWL aufgrund ihrer breiteren Kerngr\u00f6\u00dfe und der Verwendung von LEDs eine geringere Bandbreite und eine h\u00f6here Signalverzerrung aufweisen als Single-Mode LWL. Daher k\u00f6nnen sie Daten nur \u00fcber k\u00fcrzere Distanzen \u00fcbertragen.</p>"},{"location":"01_Physical_Layer/Luft%C3%BCbertragungstechnologien/","title":"Luft\u00fcbertragungstechnologien","text":""},{"location":"01_Physical_Layer/Netzwerkadapter/","title":"Netzwerkadapter","text":"<p>Ein Netzwerkadapter, auch bekannt als Netzwerkkarte oder Netzwerkinterfacekarte (NIC), ist ein Hardwareger\u00e4t, das es einem Computer erm\u00f6glicht, mit einem Netzwerk zu kommunizieren. Es wandelt die Daten, die vom Computer gesendet werden, in ein Format um, das \u00fcber das Netzwerk \u00fcbertragen werden kann, und umgekehrt. Netzwerkadapter stehen in der Grenze zur physikalischen Beschaffenheit f\u00fcr die digitale \u00e8bertragung von Bits und der Hardware die \u00fcber den TCP/IP Stack kommunizieren.</p>"},{"location":"01_Physical_Layer/Netzwerkadapter/#schnittstellen","title":"Schnittstellen","text":"<p>Netzwerkadapter k\u00f6nnen verschiedene Arten von Schnittstellen haben, abh\u00e4ngig von der Art des Netzwerks, mit dem sie kommunizieren sollen. Einige g\u00e4ngige Schnittstellen sind Ethernet (f\u00fcr kabelgebundene Netzwerke), Wi-Fi (f\u00fcr drahtlose Netzwerke) und Bluetooth (f\u00fcr kurze Distanzen). Ethernet-Adapter k\u00f6nnen RJ-45-Stecker verwenden, w\u00e4hrend Wi-Fi- und Bluetooth-Adapter in der Regel intern sind und keine physischen Stecker haben.</p>"},{"location":"01_Physical_Layer/Netzwerkadapter/#ubertragung-von-bits","title":"\u00dcbertragung von Bits","text":"<p>Netzwerkadapter verwenden verschiedene Methoden zur \u00dcbertragung von Bits, abh\u00e4ngig von der Art der Schnittstelle. Ethernet-Adapter verwenden beispielsweise elektrische Signale zur \u00dcbertragung von Bits \u00fcber Kupferkabel, w\u00e4hrend Wi-Fi-Adapter Radiowellen zur \u00dcbertragung von Bits \u00fcber die Luft verwenden.</p>"},{"location":"01_Physical_Layer/Netzwerkadapter/#weitere-eigenschaften","title":"Weitere Eigenschaften","text":"<p>Ein Netzwerkadapter ist das Bindeglied zwischen der physikalischen Schicht und der zweiten Schicht (gem\u00e4ss OSI-Model) dem Data-Link Layer. Das heisst dass f\u00fcr die \u00dcbertragung von Ethernet Ethernet Frames auch gewisse Eigenschaften vom Data-Link Layer vorhanden sind. Alle Netzwerkadapter besitzen eine Mac-Adresse. Diese Adresse ist meist schon vom Hersteller auf dem Adapter fest vergeben. </p> <p>Ein Netzwerkadapter muss sich ausserdem damit befassen, wie die Daten kontrolliert und sicher \u00fcbertragen werden. Die folgenden Mechanismen beschreiben zus\u00e4tzliche Eigenschaften von heutigen Netzwerkschnittstellen, unabh\u00e4ngig des \u00dcbertragungsmedium:</p> <p>Duplex-Einstellungen: Netzwerkadapter k\u00f6nnen in Full-Duplex-Modus (gleichzeitiges Senden und Empfangen von Daten) oder Half-Duplex-Modus (abwechselndes Senden und Empfangen von Daten) arbeiten.</p> <p>Auto-Negotiation: Dies ist eine Funktion, die es dem Netzwerkadapter erm\u00f6glicht, die beste \u00dcbertragungsrate und den Duplex-Modus automatisch mit dem verbundenen Ger\u00e4t auszuhandeln.</p> <p>Error Checking and Correction: Netzwerkadapter verwenden verschiedene Techniken zur Fehlerpr\u00fcfung und -korrektur, um sicherzustellen, dass die \u00fcbertragenen Daten korrekt sind.</p> <p>Buffering: Netzwerkadapter haben einen Puffer, der dazu dient, Daten tempor\u00e4r zu speichern, wenn der Computer oder das Netzwerk nicht in der Lage ist, die Daten schnell genug zu verarbeiten.</p> <p>Traffic Shaping: Einige Netzwerkadapter k\u00f6nnen den Datenverkehr formen, um die Netzwerkleistung zu optimieren. Dies kann durch Priorisierung bestimmter Arten von Datenverkehr oder durch Begrenzung der Bandbreite f\u00fcr bestimmte Anwendungen erfolgen.</p>"},{"location":"01_Physical_Layer/Power_over_Ethernet/","title":"Power over Ethernet","text":"<p>Power over Ethernet bezeichnet das Verfahren mit dem das Ethernet-Kabel mit dem das Netzwerkendger\u00e4t angeschlossen ist, zur Stromversorgung verwendet wird. Der Standard IEEE 802.3 (Ethernet) h\u00e4lt die Vorgaben und die Implemenetation f\u00fcr Hersteller und Anwender fest und besitzt weitere Normierungen. Darunter z\u00e4hlen die Standards 802.3at, 802.3af und neu auch 802.3bt zu den Power over Ethernet Substandards mit welchen Leistungsangaben, Speisungsart und sonstiges spezifiziert werden.</p> <p>Einsatzm\u00f6glichkeiten sind VoIP Telefone, IP-Videokameras, kleine Switches, WLAN Access Points und vieles weitere. Dabei kann man davon ausgehen, dass meistens mit wenig Leistung am Endger\u00e4t zu rechnen ist. F\u00fcr die meisten PoE Anwendungen wird mindestens eine 4-dr\u00e4htige Verbindung vorausgesetzt (100Base-T), ist seit der Entstehung aber auch f\u00fcr wollwertige Verkabelungsl\u00f6sungen vorgesehen (&gt; 1000Base-T) und wurde abw\u00e4rtskompatibel gehalten.</p>"},{"location":"01_Physical_Layer/Power_over_Ethernet/#voraussetzungen-und-spezifikation-fur-power-over-ethernet","title":"Voraussetzungen und Spezifikation f\u00fcr Power over Ethernet","text":"<p>Eine Herausforderung stellt sich vorallem in den Kabelspezifikationen um eine saubere PoE Spannung ans Endger\u00e4t zu bekommen und sicherzustellen dass die Daten\u00fcbertragung weiterhin bestehen bleibt.</p> <p>Es gibt zurzeit 3 PoE Standards:</p> Standard Leistung am Versorgenden Ger\u00e4t Leistung am Endger\u00e4t Benutzte Aderpaare PoE 802.3af 15.4 W 12.95 W 2 PoE+ 802.at 30 W 25.5 W 2 PoE++ 802.3bt 45, 60, 75, 90 W 40, 51, 62, 71 4 <p>Die Ausgangsspannung variieren zwischen 36 - 57 Volt je nach Standard. PoE setzt je nach Standard auf eine Spare pair oder Phantom pair Speisung.</p>"},{"location":"01_Physical_Layer/Power_over_Ethernet/#spare-pair","title":"Spare Pair","text":"<p>Bei einer Versorgung mittels Spare Pair, wird die Speisung \u00fcber nicht verwendete Dr\u00e4hte. Dies war fr\u00fcher meistens der Fall, da bei 100 Mbit nur 2 Aderpaare verwendet wurden.</p>"},{"location":"01_Physical_Layer/Power_over_Ethernet/#phantom-pair","title":"Phantom Pair","text":"<p>Bei einer Versorgung mittels Phantom Pair werden bestehende Datenleitungspaare auch f\u00fcr die Stromversorgung verwendet. Diese Art der \u00dcbertragung wird heute in den meisten F\u00e4llen verwendet, da Gigabit-Ethernet falls \u00fcberall anzutrefen ist und mit dem neueren PoE++ sogar unumg\u00e4nglich, da alle 4 Aderpaare verwendet werden m\u00fcssen, wo ja schon auf allen Paaren \u00fcbertragen wird. PoE++ wird meist sogar als 4PoE beziechnet.</p>"},{"location":"01_Physical_Layer/Power_over_Ethernet/#kabelspezifikation","title":"Kabelspezifikation","text":"<p>Die h\u00f6here Stromst\u00e4rke stellt auch die Datenverkabelung vor Herausforderungen. Da h\u00f6here Str\u00f6me durch die Datenverkabelung fliessen (ca. 400 - 600mA), m\u00fcssen diese auch f\u00fcr solche Str\u00f6me ausgelegt sein. Somit muss ein h\u00f6herer Querschnitt eingerechnet werden und wurde seitdem in die ISO Norm aufgenommen.</p> <p>F\u00fcr die verschiedenen Kategorien hat man sich auf folgende AWG Querschnitte geeinigt. AWG ist die Beziechnung f\u00fcr American Wire Gauge und ist ein standartisiertes Gr\u00f6ssensystem f\u00fcr die Querschnittsberechnung und die Darstellung f\u00fcr Datenkabel. Auf einem Datenkabel wird diese Gr\u00f6sseneinheit bevorzugt und zeigt einfach ausgesprochen den Querschnitt der einzelnen Adern in einem Datenkabel auf.</p> Kategorie AWG Querschnitt pro Ader Kat 5/5e 24 0.51 mm Kat 6/6A 23 0.57 mm Kat 7/7A 22 0.64 mm"},{"location":"01_Physical_Layer/Power_over_Ethernet/#aktivierungsschritte-fur-poe","title":"Aktivierungsschritte f\u00fcr PoE","text":"<p>Die Speisung mittels PoE funktioniert in der Regel bei Switches automatisch und muss meist auch nicht weiter im Detail behandelt werden. Diese Aktivierungsschritte dienen lediglich zum Vorzeigen und zur Fehlersuche bei potenziellen Problemen mit Power of Ethernet.</p> <p>Damit ein Endger\u00e4t \u00fcberall mit PoE gespiessen werden kann hat man einen Widerstand eingebaut und mit diesem Widerstand in der Netzwerkschnittstelle des Netzwerkger\u00e4ts kann der PoE Netzteiladapter identifizieren ob dieses Endger\u00e4t nun eine Speisung ben\u00f6tigt oder nicht. So wird nur an den Ports PoE ausgegeben, welche tats\u00e4chlich mit PoE gespiessen werden m\u00fcssen.</p> Schritt Aktion Detektion Feststellung ob das Endger\u00e4t einen Widerstand aufweist Klassifikation Messen des genauen Widerstandwertes zur Identifizierung der PoE Klasse Startup Eigentliche Stromversorgung aktivieren Normaler Betrieb Stromversorung im Versorgungsmodus"},{"location":"02_Data-Link_Layer/","title":"Einleitung","text":"<p>Der Data-Link Layer ist die zweite Schicht im OSI-Modell und ist verantwortlich f\u00fcr die \u00dcbertragung von Datenpaketen von einem Knoten zum n\u00e4chsten. Er stellt eine zuverl\u00e4ssige Verbindung zwischen zwei direkt verbundenen Netzwerkknoten her und erm\u00f6glicht die Kommunikation zwischen ihnen. Der Data-Link Layer ist in zwei Subschichten unterteilt: </p> <ul> <li>Logical Link Control (LLC) und Media Access Control (MAC).</li> <li>Die LLC-Schicht ist verantwortlich f\u00fcr die Fehlerkontrolle, Flusskontrolle und Rahmen-Synchronisation.</li> </ul> <p>Zusammen bieten beide Subschichten das Fundament f\u00fcr das Ethernet Protokol und werden im Kapitel Ethernet</p>"},{"location":"02_Data-Link_Layer/#mac-schicht","title":"MAC Schicht","text":"<p>Die MAC-Schicht ist verantwortlich f\u00fcr die Kontrolle des Zugriffs auf das gemeinsame Medium. Der Data-Link Layer verwendet Hardwareadressen (MAC-Adressen) zur Identifizierung von Ger\u00e4ten in einem Netzwerk. Er kann auch Fehlererkennung und -korrektur durchf\u00fchren, um die Integrit\u00e4t der \u00fcbertragenen Daten zu gew\u00e4hrleisten. Der Data-Link Layer ist auch f\u00fcr die Erstellung und Verarbeitung von Frames verantwortlich. Er ist der Vermittler zwischen dem physischen Layer, der sich mit den physischen Aspekten der Daten\u00fcbertragung befasst, und dem Netzwerk-Layer, der sich mit der Datenrouting befasst. Insgesamt spielt der Data-Link Layer eine entscheidende Rolle bei der Bereitstellung einer zuverl\u00e4ssigen und effizienten Kommunikation zwischen Netzwerkknoten. Die MAC-Subschicht ist in diesem Fall auch der Tr\u00e4ger f\u00fcr das eigentliche Ethernet-Protokol und dessen Implemenation.</p>"},{"location":"02_Data-Link_Layer/#llc-schicht","title":"LLC Schicht","text":"<p>Die Logical Link Control befasst sich mit den Apsekten der ordentlichen Bit\u00fcbertragung in der direkten Verbindung. Sie stellt die Integrit\u00e4t der Daten\u00fcbertragung her und verwaltet die Logik f\u00fcr verschiedene \u00dcbertragungsformen wie Multiplexing und Fehlerkorrekturen. Die LLC Schicht \u00fcbernimmt die Zuweisungen von der Layer-3 \u00fcbergebenen Schichten an die MAC-Schicht und kontrolliert den Paketflow wie aber auch die sequenzielle Zuweisung bei mehreren Verbindungen \u00fcber die Netzwerkschnittstelle. Mit der LLC Schicht befassen wir uns in diesem Workshop nicht.</p>"},{"location":"02_Data-Link_Layer/Ethernet/","title":"Ethernet","text":"<p>Das Ethernet Protokol ist eine Familie von kabelgebundenen Technologien und wurde 1980 unter dem IEEE Standard IEEE802.3 festgelegt. Ethernet wurde \u00fcber die Jahre immer weiterentwickelt um schnellere \u00dcbertragungen zu erm\u00f6glichen, l\u00e4ngere Distanzen zu \u00fcberbr\u00fccken um das darunterliegenden Twisted Pair Kabel besser ausn\u00fctzen zu k\u00f6nnen oder einfachere Mehrverbindungen zuzulassen. In der Zeit ist aber Ethernet immer abw\u00e4rtskompatibel zu deren \u00e4lteren Definitionen gehalten worden.</p> <p>Das originale 10BASE5 wurde damals mit dicken Koaxialkabeln betrieben und nach kurzer Zeit durch Twisted Pair und Optischen Kabeln ersetzt. In den letzten Jahren wurde Ethernet soweit entwickelt, dass bis zu 400Gbit/s \u00fcbertragen werden k\u00f6nnen.</p> <p>Ethernet beschreibt mehrere Verkabelungs- und Signalisierungsvarianten und definiert sich \u00fcber das OSI-Model \u00fcber die ersten 2 Schichten, vorallem in der MAC-Subschciht auf Layer-2.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#ethernet-frame","title":"Ethernet Frame","text":"<p>Ethernet arbeitet auf der 2 OSI-Layer Schicht und verarbeitet \u00fcblicherweise Frames. Ethernet Frames sind die letzte logische Einheit bevor diese Daten dann schlussendlich zu Bit verarbeitet wird beim Senden. beim Empfangen werden die Bits wieder zu einem Frame zusammengesetzt. Ein Frame besteht aus einem sogenannten Header, die Kopfzeile eines Frames und den eigentlichen zugrundeliegenden Daten. Am Ende des Frames wird noch eine CRC Checksume angereiht und um sicherzustellen, dass keine Fehler bei der \u00dcbertragung passiert sind. Wir gehen in CRC Checksumme n\u00e4her darauf ein.</p> <p></p>"},{"location":"02_Data-Link_Layer/Ethernet/#headers","title":"Headers","text":"<p>Headers sind die Kopfzeile eines jeden Ethernet Frames. Darin stehen alle Addressinformationen die n\u00f6tig sind um einem Switch zu sagen von wo und wohin ein Frame \u00fcbertragen werden sollte. Folgende Eintr\u00e4ge im Header definieren haupts\u00e4chlich die Hauptbestandteile des Headers</p>"},{"location":"02_Data-Link_Layer/Ethernet/#destination-mac-adresse","title":"Destination MAC Adresse","text":"<p>Dieses Feld h\u00e4lt den Wert der Mac-Adresse des Empf\u00e4ngerger\u00e4ts bei sich.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#source-mac-adresse","title":"Source MAC Adresse","text":"<p>Dieses Feld h\u00e4lt den Wert der Mac-Adresse des Absenderger\u00e4ts bei sich.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#ethertype","title":"EtherType","text":"<p>Beschreibt mit einem vordefinierten Wert den Inhalt des \u00fcberliegenden Protokols auf Layer 3. In einem reinen TCP/IP IP-Netzwerk wird dass meistens IPv4 sein. Der Wert f\u00fcr IPv4 in einem EtherType Feld w\u00e4re zum Beispiel 0x0800.</p> <p>Das Ethertype Feld dient dazu, das n\u00e4chste \u00fcbergeordnete Protokoll zu beschreiben, damit das ausgekapselte Paket an die richtige Protokolverarbeitung gelangt. Im Falle von IPv4 wird das ausgekapselte IP-Paket an die \u00ceP-Verarbeitungsschicht im Rechner weiter\u00fcbergeben.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#daten","title":"Daten","text":"<p>Daten sind in diesem Fall das IP-Paket. Das Ethernet-Frame befasst sich nicht mit den dar\u00fcberliegenden Daten. In den meisten F\u00e4llen sind das IP-Pakete, kann aber auch jedes andere Layer-3 Protokol sein.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#crc-checksumme","title":"CRC Checksumme","text":"<p>Am Ende nach den Daten wird die Quersumme der Daten f\u00fcr die Checksumme ausgerechnet. Falls sich and den darunterliegenden Daten w\u00e4hrend der \u00dcbertragung etwas ver\u00e4ndert h\u00e4tte, w\u00fcrde die Neuberechnung nicht derselben Quersumme entsprechen und auf einen Fehler bei der \u00dcbertragung hindeuten. So kann das Ethernetprotokoll eine Neu\u00fcbertragung des Frames anfragen und sicherstellen, dass alle Frames eindeutig \u00fcbertragen werden. Dies ist eine leichte Erkl\u00e4rung auf eine komplexe L\u00f6sung von CRC-Checksummen.</p> Trivia <p>Im hintergrund l\u00e4uft da noch mehr ab. Falls du mehr wissen m\u00f6chtest kannst du gerne hier die bessere Erkl\u00e4rung lesen.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#bilden-eines-netzwerks-auf-basis-von-ethernet","title":"Bilden eines Netzwerks auf Basis von Ethernet","text":"<p>Ein einfaches Ethernet Netzwerk kann am einfachsten mit einem einfachen Switch erstellt. Dabei ben\u00f6tigt es noch keinen Router oder sonstige Komponenten. Dabei bildet sich automatisch \u00fcber dieses kleine Netzwerk eine Broadcast Domain. Die Broadcast Domain ist ein einfacher Begriff f\u00fcr ein Netzwerk \u00fcber das alle Komponenten \u00fcber jeden Port an diesem Switch kommunizieren k\u00f6nnen und Broadcasts versendet werden. Somit kann man davon ausgehen, dass wenn ein Broadcast von einem Ger\u00e4t versendet wird, dass dieses an jedem Port ausgesandt wird. Nun nimmt man einen weiteren Switch dazu und verbindet dieses mit dem bestehenden Switch. Nun auch geh\u00f6rt dieser Switch derselben Broadcast domain an und Broadcast Pakete k\u00f6nnen dort empfangen und wieder an alle Ports weitergeleitet werden. Gratuliere du hast ein LAN erstellt.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#was-ist-ein-broadcast","title":"Was ist ein Broadcast","text":"<p>Broadcast definiert den Versandt einer Information an alle in einem Netzwerk. Im Falle von Ethernet ist dies eine wichtige Art sich im Netzwerk auszutauschen und vorallem wenn man auf Layer 3 wichtige Operationen durchf\u00fchren sogar essenziel. Denn ein Broadcast erm\u00f6glicht gleich von Anfang an M\u00f6glichkeiten um den Standort und weitere Informationen zu bestimmen.</p> <p>Ein Broadcast im Ethernet Bereich ist ganz einfach definiert. M\u00f6chte ein Rechner eine Broadcast-Nachricht an alle Computer im Netzwerk senden, so schreibt dieser seine Nachricht einfach an die Destination MAC-Adresse ff:ff:ff:ff:ff:ff. Diese MAC-Adresse ist standartisiert und wird von jedem Switch verstanden und f\u00fchrt dazu, dass diese Frames dann an jedem Port ausgesandt wird.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#wieso-benotigt-man-broadcast-anfragen","title":"Wieso ben\u00f6tigt man Broadcast-Anfragen","text":"<p>Da kann man einfache praktische und in der Praxis verwendete Beispiele verwenden:</p> <ul> <li> <p>Wenn ein Client in einem Netzwerk sich verbindet und gerne per DHCP eine IP-Adresse h\u00e4tte, m\u00fcsste der Computer raten oder schon bereits wissen mit welcher MAC-Adresse dieser angesprochen wird. Wenn der Client jedoch einfach eine Broadcast Anfrage mit der Bitte um eine DHCP Adresse macht, kann der DHCP Server ihm die Antwort mit einer neuen IP-Adresse weiterreichen.</p> </li> <li> <p>Hat man einen MAC-Filter auf einem Switch, kann einfach das Ger\u00e4t identifiziert werden, da jedes Ger\u00e4t beim Einstieg in ein Netzwerk direkt eine Broadcast-Nachricht an alle Empf\u00e4nger \u00fcbermitteln w\u00fcrde.</p> </li> <li> <p>Wenn man die MAC-Adresse eines Ger\u00e4ts kennenlernen m\u00f6chte in der Broadcast-Domain, kann man ja einfach alle Rechner im Netzwerk fragen wer die IP-Adresse besitzt und bekommt die MAC-Adresse in der Antwort des Empf\u00e4ngerger\u00e4ts.</p> </li> </ul> <p>Wichtig ist auf jeden Fall zu wissen, dass Broadcast-Anfragen nur von diesem Netzwerkger\u00e4t beantwortet werden, welches f\u00fcr diese Anfrage auch zust\u00e4ndig ist. Somit werden nicht unn\u00f6tigerweise noch Antworten im Netzwerk verschickt, welche schlussendlich \u00fcberfl\u00fcssig w\u00e4ren und keinen Nutzen bringen w\u00fcrden.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#was-wenn-ich-meine-broadcast-domane-aufteilen-mochte","title":"Was wenn ich meine Broadcast Dom\u00e4ne aufteilen m\u00f6chte?","text":"<p>Wie schon betont, spannt sich eine Broadcast Dom\u00e4ne \u00fcber jeden Port auf allen Switches. Doch mit der Einf\u00fchrung von VLAN. Mit VLANs lassen sich virtuelle LANs bilden und l\u00e4sst somit das aufteilen eines physikalischen Netzwerks in mehrere logische Netzwerke. So k\u00f6nnen auf einem Switch mehrere eigenst\u00e4ndige Broadcast-Dom\u00e4nen existieren, welche auf dem selben phyischen Switch nicht miteinander kommunizieren k\u00f6nnen. Die Technik und der Standard dahinter wurde mit IEEE 802.1Q umfassend definiert.</p> <p>Mit IEEE 802.1Q wurde f\u00fcr das bisherige Ethernetframe ein zus\u00e4tzliches Feld eingebaut. Der 802.1Q Header, mit 32Bit, wurde nach dem Source-MAC Feld eingef\u00fcgt und beschreibt folgende Datenfelder:</p> <ul> <li>Protokoll-ID</li> <li>Priorit\u00e4t</li> <li>Canonical Format</li> <li>VLAN-ID</li> </ul> <p>Vorallem die Protokoll-ID, die Priorit\u00e4t und die VLAN-ID sind wichtig. Die protocol-id beschreibt den Frame als ein vlan-tagged-frame und so weiss ein Switch, dass in dieser Frame in einem bestimmten VLAN ist. Die Priorit\u00e4t ist ein Feld zur Bestimmung von QoS-Priorisierungsleveln auf einem Frame (siehe QoS). die letzten 12 Bit ben\u00f6tigen wir um VLAN-IDs zu setzen.</p> <p></p> <p>VLAN-IDs sind die Kennungsziffern von jedem virtuellen Netzwerk und so kann der Switch \u00fcber die VLAN-ID die Frames in das richtige VLAN \u00fcbertragen.</p> <p>Das Arbeiten mit VLANs erm\u00f6glicht uns viele M\u00f6glichkeiten ein Netzwerk mit weniger Switches in mehrere Subnetze aufzuteilen. Das Arbeiten mit VLAN-Tagging erm\u00f6glicht das gleichzeitige \u00dcbertragen von Frames aus mehreren VLANs auf einem Kabel und erspart somit die gr\u00f6ssere Kabelungsarbeiten. Das Festlegen von einem fix definierten VLAN f\u00fcr normale Arbeitsger\u00e4te, macht es m\u00f6glich dass man einzelne Ports als untagged ports definiert und somit nur auf einem spezifischen VLAN sitzt.</p>"},{"location":"02_Data-Link_Layer/Ethernet/#welche-gerate-unterstutzen-vlans","title":"Welche Ger\u00e4te unterst\u00fctzen VLANs","text":"<ul> <li>Managebare Switches unterst\u00fctzen in der Regel VLAN-Tagging</li> <li>Server mit Servernetzwerkschnittstellen m\u00fcssen auch ein Betriebssystem und die richtigen Treiber besitzen um mit VLAN Informationen klarzukommen (Windows Server, Linux)</li> </ul>"},{"location":"02_Data-Link_Layer/Kapselung/","title":"Kapselung","text":"<p>Eines der wichtigsten Konzepte, besonders wenn man mit allen Schichten in einem OSI-Model die richtige Herangehensweise verstehen kann wie aus den Daten welche zum Beispiel bei einem Webaufruf die Daten darstellen kann, muss mit dem Begriff der Kapselung angefangen werden. Die Kapselung beschreibt in kurzer Form wie Daten von verschiedenen Softwareschichten miteinander Daten austauschen k\u00f6nnen ohne die dabei zugrundeliegende Datenkapsel manipulieren zu m\u00fcssen.</p>"},{"location":"02_Data-Link_Layer/Kapselung/#osi-7-schichten-model","title":"OSI 7-Schichten Model","text":"<p> Doch bevor die Kapselung verstanden werden kann muss das Grundger\u00fcst der Netzwerk\u00fcbertragung definiert werden. 1970 Musste ein gemeinsamer Kommunikatioinsstandard entwickelt werden um die Datenkommunikation zu vereinfachen und festzuhalten. Bis dahin haben Firmen mit propriet\u00e4ren Kommunikationstechnologien gearbeitet und es musste jedes mal neu verstanden werden wie die Kommuniation in einer Anlage definiert und aufgebaut ist. Dies f\u00fchrte zu Fehlern und verlangsamte die Entwicklung von neuen Kommunikationsmodellen. Das amerikanische Milit\u00e4r arbeitete zum Beispiel an ihrem DoD Model, wurde aber schnell vom OSI-Model ersetzt. Doch seit den 90er Jahren hat sich das TCP/IP-Model standardisiert. Das TCP/IP Model lehnt sich jedoch sehr start an das OSI Model und kann als Zusammenfassung von einzelnen Schichten im OSI-Model betrachtet werden.</p> <p>Bei der Kommunikation zwischen den Schichten wird auf die Entkapsulation / Einkapselung gesetzt. So wird sichergestellt, dass die Daten zwischen den Schichten keinen Einfluss auf die \u00dcbertragung und deren Methoden hat und l\u00f6st Abh\u00e4ngigkeiten ab. So kann zum Beispiel statt IPv4 auf IPv6 gewechselt werden, ohne dass das Ethernetprotokol sich mit den darin liegenden Daten befassen muss, da die Implementation f\u00fcr jede Schicht unabh\u00e4ngig ist.</p> <p>Man kann sich das so vorstellen als w\u00fcrde man eine kleine Matrjoschka Puppe mit der eigentlichen Nachricht in eine gr\u00f6ssere Matrjoschka Puppe hineinpacken und dies so weiterf\u00fchren bis keine gr\u00f6ssere Puppe mehr vorhanden ist. In jeder anderen Puppe stehen Instruktionen wie man zur n\u00e4chsten Puppe gelangt. Bei der \u00dcbergabe der finalen Puppe muss die Gegenstelle anhand der Instruktionen alle Puppen auseinander entkapseln um zum Schluss die letzte Puppe mit der eigentlichen Nachricht auspacken. Das Zwiebelschalenprinzip kann in diesem Fall auch angewendet werden um den Begriff der Kapselung verstehen zu k\u00f6nnen. Das Problem dabei ist mehr, wie man die Schale wieder zusammenf\u00fchrt und sollte hier nicht noch n\u00e4her behandelt werden.</p>"},{"location":"02_Data-Link_Layer/Kapselung/#beispiel","title":"Beispiel","text":"<p>Man siehe ein Beispiel aus dem allt\u00e4glichen. Du gehst auf deinen Lieblingsbrowser und startest als erstes die Website von Google (https://google.com). Sobald du Enter dr\u00fcckst, durchl\u00e4uft die Kommunikation alle 7 Schichten des OSI-Models, oder im Fall des TCP/IP Models alle 4 Schichten.</p> <ul> <li> <p>Layer 7 - Applikationsschicht: Der Browser erstellt eine HTTP GET Anfrage an den Server auf https://google.com. Die GET-Anfrage m\u00f6chte gerne die HTML-Seite und dessen Medien \u00fcber die Anfrage aufrufen. Eine solche Anfrage kann kurz so zusammengefasst werden: GET /, content-type: \"text/html\" HTTP/1.0. Dies beschreibt in kurzer Form was der WebBrowser vom Webserver google.com m\u00f6chte. Anschliessend wird die Anfrage, da es sich um https h\u00e4lt (hypertext transfer protocol secure), an Layer 6 weitergereicht wo die Daten verschl\u00fcsselt werden.</p> </li> <li> <p>Layer 6 Pr\u00e4sentationsschicht: Der SSL Dienst erh\u00e4lt von der dar\u00fcberliegenden Schicht in der Applikation die GET-Anfrage. Die darunterliegenden Daten wurde schon bereitgestellt und muss nur noch verschl\u00fcsselt werden. Mit welchem Verfahren dies geschieht, wird mit anderen Anfragen an den selben Server aus dem Kontext der GET-Anfrage mit google.com abgehandelt und schlussendlich ausgef\u00fchrt. Diese Anfragen, geschehen separat und durchlaufen die selben Schichten ab, wie die eigentliche Abfrage. Die eigentliche Anfrage wird in die SSL Prozedur eingekapselt und verschl\u00fcsselt. Danach werden die verschl\u00fcsselten Daten weitergereicht an die 5. Schicht.</p> </li> <li> <p>Layer 5 Sitzungsschicht: Bevor die Applikation die verschl\u00fcsselten Daten weiter in die Transportschicht \u00fcbergibt, muss eine Sitzung f\u00fcr die Verbindung erstellt werden um die Verbindungungen in der Software assozieren zu k\u00f6nnen. Es ist ja m\u00f6glich mit einer Applikation mehrere Verbindungen an verschiedene Dienste zu richten oder auch mehrere Programme k\u00f6nnen ja \u00fcber die gleiche Hardwareschnittstelle kommunizieren ohne dass die Software von anderen Netzwerkverbindungen gest\u00f6rt werden kann oder dessen Daten einlesen kann. Mit der Sitzungsschicht wird schlussendlich sichergestellt, dass die richtige Dateninstruktion welches ins Betriebssystem \u00fcber die unterliegenden Schichten 2-4 an die richtige Software \u00fcbergeben wird.</p> </li> <li> <p>Layer 4 Transportschicht: Die eigentliche Applikation wird verlassen (der Web-Browser) und die dar\u00fcberliegenden Daten aus der Sitzungsschicht wurden erreichen die Transportschicht. Zur Zuordnung der Daten einer Applikation im Rechner m\u00fcssen diese Daten adressiert werden. So weiss der Rechner von welcher Applikation gesendet und empfangen wird. Die dar\u00fcberliegende Applikation \u00f6ffnet einen Port und beschreibt das Protokolverfahren mit welchem die Datenintegrit\u00e4t sichergestellt wird. \u00dcblich wird bei HTTP Anfragen mit TCP (Transmission Control Protocol) die Integrit\u00e4t sichergestellt. Ausserdem wird ein Zielport f\u00fcr die \u00dcbertragung definiert. Mit dieser weiss der Empf\u00e4ngerrechner an welche Applikation die Anfrage gerichtet wird. Nach dem die Daten in ein TCP Segment eingekapselt wird, gehts weiter zur n\u00e4chsten Schicht. Layer 3 \u00fcber das IP-Protokol</p> </li> <li> <p>Layer 3 Netzwerkschicht: TCP \u00fcbergibt seine bereits enkapsulierten Daten weiter an die zust\u00e4ndige Netzwerkkomponente und F\u00fchrt seine Headerinformationen an die \u00fcbergeordneten Daten. Die Sender und Empf\u00e4nger IP-Adresse wird an die gekapselte Information angef\u00fchrt und wird als IP-Paket weitergereicht an die zweite Schicht. Dem Ethernet Frame.</p> </li> <li> <p>Layer 2 Data-Link-Schicht: Das IP-Paket wird an das Ethernetprotokoll eingegliedert. Die Mac Adresse der benachbarten Netzwerkschnittstelle wird als Destination weitergereicht und die eigene Mac Adresse wird als Source eingetragen. Am Ende wird von allen Daten im Ethernet Frame noch eine CRC Checksumme ausgerechnet und somit \u00fcbernimmt die Netzwerkkarte dann das Modulieren des Frames in Bits und die \u00dcbertragung auf das Kabel erfolgt.</p> </li> </ul> <p>In dieser Abbildung wird der Prozess simpler dargestellt </p> <p>In den weiteren Kapiteln wird n\u00e4her auf die Protokolspezifische Implementation der Kapselung eingegangen, da jede Schicht mit ihren Protokollen anders mit dem Verfahren umgehen.</p>"},{"location":"02_Data-Link_Layer/Netzwerkger%C3%A4te/","title":"Netzwerkger\u00e4te","text":"<p>in der zweiten Schicht kennt man heutzutage nciht mehr viele Ger\u00e4te. Der Netzwerkswitch hat sich seit Jahren als die einzige Alternative erwiesen und bleibt bis heute die Kernkomponente f\u00fcr Ethernetbasierte Netzwerke. Trotzdem beschreibe ich hier noch ein paar namenhafte Komponenten aus der Fr\u00fchzeit und wie Ethernet mit diesen Komponenten funktionierte und L\u00f6sungen gefunden wurde um auf den Stand eines Switches zu kommen.</p>"},{"location":"02_Data-Link_Layer/Netzwerkger%C3%A4te/#repeaters-und-hubs","title":"Repeaters und Hubs","text":"<p> Ein Netzwerkhub oder ein Netzwerkrepeater wurde fr\u00fcher noch ben\u00f6tigt um mehrfache Verbindungen \u00fcber eine Bus-Topologie zu realisieren. Dies hatte zum Vorteil, dass so mehrere Ger\u00e4te mit weniger teuren Kabeln in einem Netzwerk eingebunden werden konnte. Doch die Netzwerkst\u00f6rungen nahmen schnell zu wenn immer mehr Netzwerkkomponenten in das Netzwerk geschlauft wurde. Darum wurden Kerntechnologien f\u00fcr das Ethernet-Protokol entwickelt um die Qualit\u00e4t der Verbindungen zu verbessern.</p> <p>Repeater sind protokolunabh\u00e4ngig und verarbeiten keine Pakete wie ein Switch, sondern verteilen auf allen Ports jedes \u00fcbermittelte Signal aus, ausser an dem Port von welcher Netzwerkframes eingegangen sind.</p> <p>Der Vorteil von Hubs war offentsichtlich. Zumal konnte man mehrere Netzwerkger\u00e4te mit weniger Kabelaufwand verbinden. Doch dies war auch der einzige Vorteil der angeboten wurde. Frames welche nur an ein Ger\u00e4t gesendet werden musste, sind auf allen Ports ausgestrahlt worden und die Technologie basierte auf Halb-Duplex. Das heisst es konnte nur ein Ger\u00e4t zur selben Zeit senden und alle anderen Ger\u00e4te mussten Frames welche nicht an sie gerichtet wurden, trotzdem verarbeiten und schlussendlich verwerfen.</p> <p>Um die Kommunikation \u00fcber einen Hub zu vereinfachen und keine Signalkollisionen zu verursachen, musste ein Mechanismus entwickelt werden der Signalkollisionen entdecken und umgehen kann. Daf\u00fcr wurde CSMA/CD entwickelt.</p>"},{"location":"02_Data-Link_Layer/Netzwerkger%C3%A4te/#csmacd","title":"CSMA/CD","text":"<p>Carrier Sense Multiple Access/Collision Detection bezeichnet ein asynchrones Medienzugriffsverhalten, dass den Zugriff verschiedener Stationen auf ein gemeinsames \u00dcbertragungsmedium regelt.</p> <p>Damit mehrere Komponenten gleichzeitig senden und lauschen k\u00f6nnen musste ein Verfahren entwickelt werden, welches diese Handhabung regelt und standardisiert. Der Ablauf sieht insofern so aus:</p> <p>Schritt 1 Horchen: \u00dcberpr\u00fcfe ob das Medium belegt ist</p> <p>Frei: =&gt; Weiter mit Schritt 2</p> <p>Belegt: =&gt; Weiter mit Schritt 1</p> <p>Schritt 2 Senden: W\u00e4hrend dem Abh\u00f6ren wird die Information auf das Medium \u00fcbertragen</p> <p>Erfolg: =&gt; Die \u00dcbertragung ist erfolgreich. Weiter mit Schritt 5</p> <p>Kollision: =&gt; Wird eine Kollision entdeckt, beendet die Komponente die \u00dcbertragung und sendet ein Jam-Signal welches alle Ger\u00e4te informiert, dass eine Kollision stattgefunden hat. Weiter mit Schritt 3</p> <p>Schritt 3 Leitung ist belegt: \u00dcberpr\u00fcfe die Anzahl der \u00dcbertragungsversuche</p> <p>Maximum nicht erreicht: eine zuf\u00e4llige Backof-Zeit wird abgewartet. Weiter mit Schritt 1</p> <p>Maximux erreicht: Weiter mit Schritt 4</p> <p>Schritt 4 Fehler: Maximale Anzahl an \u00dcbertragunsversuchen wurde \u00fcberschritten und ein Fehler wird an die \u00fcbergeordnete Schicht (Layer 3) zur\u00fcckgeschickt.</p> <p>Weiter mit Schritt 5</p> <p>Schritt 5 \u00dcbertragungsmodus beenden</p>"},{"location":"02_Data-Link_Layer/Netzwerkger%C3%A4te/#switches","title":"Switches","text":"<p> Switches sind die weiterentwicklung von Hubs und bieten nebst dem Komfort mehrere Ger\u00e4te in ein Netzwerk aufzunehmen auch die Kapaziz\u00e4t mit dem Ethernet Protokol zu arbeiten. Switches funktionieren wahrlich auf der zweiten Schicht, d.h. der Switch kann gezielt Frames anhand der Quell- und Zieladresse die Datenpakete am richtigen Port raussenden, ohne dabei alle Ports mit Frames zu \u00fcbersch\u00fctten. Anders als bei einem Hub, sind bei Switches intelligente Komponenten eingebaut um die Verarbeitung von Daten schnell zu verarbeiten.</p> <p>Seit der Erfindung des Switches im Vergleich zu den heutigen am Markt verf\u00fcgbaren Ger\u00e4ten hat sich einiges ge\u00e4ndert. Switches kommen mit Voll-Duplex hervorragend aus und haben sogar gelernt Verkabelungsfehler vorzeitig zu korrigieren. Wie zum Beispiel das zusammenstecken von 2 Switches mit einem nicht-Crossoverkabel f\u00fchrte fr\u00fcher zu Problemen, da Switches anders als Computer nicht \u00fcber die gleichen Pins senden und empfangen. Heute einigen sich Switches selbstst\u00e4ndig mit welchen Pins sie senden und empfangen wollen.</p> <p>Switches k\u00f6nnen in verschienenen Arten und Formen auftauchen. Festverbaut oder modular in einem Chassis, mit RJ45 oder SFP+ Modulen zu Erweiterung von Schnittstellen oder auch mit direkter Spannungsversorgung \u00fcber das Netzwerkkabel mittels PoE.</p> <p>Wichtig ist zu verstehen dass Switches in ihren Operationen rein auf Layer 2 arbeiten und die dar\u00fcberliegenden Layer nicht versteht oder verstehen muss. Trotzdem hat man im Laufe der Zeit an vielen Stellen mit Layer 3 Switches (sogenannte Multilayer Switches) eine Variante des Netzwerkswitches gemacht, welches Routing auch m\u00f6glich macht. Obwohl diese Switches auch auf Layer 3 operieren k\u00f6nnen, heisst das nicht dass diese Switches nicht ihre Aufgabe als Switch wahrnehmen, sondern dass die Funktionalit\u00e4t von Routern virtuell auf solche Switches abgew\u00e4ltzt wurde um f\u00fcr spezielle F\u00e4lle eine andere Alternative bietet ohne Router mit mehreren Netzwerken einfach umzugehen. </p>"},{"location":"02_Data-Link_Layer/Netzwerkger%C3%A4te/#access-points","title":"Access Points","text":"<p> Ein Access Point dient zur Erweiterung des Netzwerks f\u00fcr nichtkabelgebundene Endger\u00e4te. Ein Access Point operiert genau betrachtet auf der ersten und zweiten Schicht und dient als Br\u00fccke der kabelgebundenen Protokolle auf kabellose Protokolle. Access Points arbeiten anders als Switches mit dem 802.11 Wlan-Standard und arbeitet wie bei Ethernet mit Mac-Adressen, aber auch mit anderen Parametern um die Verbindungen zu steuern. </p> Gut zu wissen <p>Trotz der guten Daten\u00fcbertragungsgeschwindigkeit mit WLAN, funktioniert die \u00dcbertragung nur \u00fcber Halb-Duplex. Das heisst der WLAN-Sender und die gebundenen Ger\u00e4te k\u00f6nnen nicht gleichzeitig Senden und empfangen. </p> <p>Man hat sich dabei auf sehr gewagte \u00dcbertragungsmethoden und Konzepte orientiert und ist ein Thema welches f\u00fcr jeden interessierten besser in einer Selbststudie angeschaut werden soll. Das beschriebene Verfahren CSMA/CA (Nicht verwechseln mit CSMA/CD) dient dabei als eine der wichtigsten Fundamente wie Halbduplex f\u00fcr solche F\u00e4lle bestens geeignet ist.</p>"},{"location":"02_Data-Link_Layer/QoS/","title":"Quality of Service","text":"<p>QoS erm\u00f6glicht es uns mit der Einf\u00fchrung von IEEE802.1p Frames mit einer Priorit\u00e4tsinformation auszustatten und dem Switch mitzuteilen mit welcher Priorit\u00e4t diese Frames verarbeitet werden. Somit k\u00f6nnen wir f\u00fcr zeitkritische Anwendungen (Telefonie, Video) sicherstellen, dass diese Frames bevorzugt behandelt werden.</p> <p>QoS of Service wurde im erweiterten Ethernet Frame mit IEEE802.1p eingef\u00fchrt und und ist ein 3 Bit grosses Feld und erm\u00f6glicht somit 8 Werte zur Unterscheidung der verschiedenen Priorisierungslevel.</p> priority Traffic-Eigenschaften 0 Hintergrund 1 best Effort 2 Excellent Effort 3 Critial Application 4 Video (&lt; 100ms) 5 Voice (&lt; 10ms) 6 Internetwork Control 7 Network Control <p>Seit der Arbeit an 802.1p wurde die Definition f\u00fcr den 802.1Q Standard als Teil des Standards definiert.</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/","title":"Spanning Tree","text":"<p>Spanning Tree ist ein eigenes Protokol zum Austausch von Schleifenbildungen in geswitchten Umgebungen. Das Ziel von Spanning Tree ist es anhand von Gewichts und Stammangaben der Switches einen eindeutigen Pfad du definieren und eventuelle Schleifen im Netzwerk zu identifizieren und sich davor zu sch\u00fctzen. Haupts\u00e4chlich aber verwendet man Spanning Tree zur Redundanzabsicherung in einem Netzwerk ohne, dass sogenante Broadcast-Loops entstehen k\u00f6nnen.</p> <p>Ziel von Spanning Tree ist immer den Zustand eines Baumes zu erhalten. \u00c4ste auf einem Baum wachsen schliesslich auch nicht zusammen. Wenn ein Loop entdeckt wird, verwendet Spanning Tree einen Mechanismus um den Port auszuschalten und die Baumstruktur intakt sicherstellt.</p> Was sind Broadcast Loops <p>Wenn man bei einem Netzwerkswitch von einem Port zum anderen ein Patchkabel einsteckt, entsteht ein Broadcast-Loop. Der Broadcast Loop entsteht weil im ersten Moment wenn ein Netzwerkger\u00e4t angeschlossen wird ein, Ethernet-Broadcast Frame ausgesandt wird. Dieses Frame wird an jedem Port ausgesandt, ausser bei dem Port von dem die Broadcastnachricht gesendet wurde. Bei einer Verkettung von Switches wird dies bei jedem Switch auch wiederholt bis diese Broadcast Frames an jedem Port ausgesandt wurde. Bei einem Loop w\u00fcrde dieses Frame auch immer wieder ausgesandt werden, da aus der Sicht des Switches ein neues Broadcast-Frame verschickt wurde und er seiner Aufgabe als Switch nachgehen m\u00f6chte und diese wieder an alle Ports hinausflutet. Dieses Problem wiederholt sich so lange bis keine weiteren Nachrichten \u00fcber die Switches mehr ausgesandt werden k\u00f6nnen und es zu einem Ausfall der Netzwerkkomponenten kommen kann.</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#basics","title":"Basics","text":""},{"location":"02_Data-Link_Layer/Spanning_Tree/#formen-von-spanning-tree","title":"Formen von Spanning Tree","text":"<p>Spanning Tree gibt es in mehreren Varianten. Meistens werden diese in ihrer Kurzform names STP unter Netzwerkadministratoren ausgetauscht.</p> <p>Folgende Formen von STP kann man in der Wildnis antrefen:</p> <ul> <li>STP (Spanning Tree Protocol)</li> <li>RSTP (Rapid Spanning Tree Protocol)</li> <li>MSTP (Multiple Spanning Tree Protocol)</li> <li>PVST (Per Vlan Spanning Tree - Cisco Propriet\u00e4r)</li> <li>CST (Common Spanning Tree)</li> </ul> <p>Die meisten Netzwerke verwenden in der Regel eine Form von STP/RSTP oder bei gr\u00f6sseren komplexeren Netzwerken auf der man per VLAN einen eigenen Spanning Tree aufbauen m\u00f6chte MSTP/PVST</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#protokolloperation","title":"Protokolloperation","text":"<p>Zwei Wichtige Begriffe sind f\u00fcr Spanning Tree wichtig um zu verstehen was eingestellt werden muss um ein einfaches durch Spanning Tree gesch\u00fctztes Netzwerk richtig zu implementieren. Path cost und root bridge. Spanning Tree ist ein eigenes Protokoll, welches in einem Layer-2 Netzwerk Verwendung findet. Spanning Tree versucht immer Loops zu identifizieren, da jeder Port welches mit einem anderen Spanning Tree tauglichen Switch verbunden ist als aller erstes \u00fcber das Spanning Tree Protokol BPDUs aussendet um die root bridge zu definieren. In einer Spanning Tree Landschaft darf es immer nur eine Root Bridge geben. Denn dieser Switch hat als einziger Switch keinen Port, welches \u00fcber STP ausgeschaltet werden kann.</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#path-cost","title":"Path cost","text":"<p>Spanning Tree definierte ein paar Regeln f\u00fcr den sauberen Aufbau eines Spanning Tree. Jeder Switchport hat Kosten hinterlegt, die sogenannte Path cost. Die Kosten werden anhand der Geschwindigkeit des Ports meist automatisch errechnet, k\u00f6nnen aber auch selber definiert werden. In der Regel teil man die Kosten nach der Geschwindigkeit des Ports auf, so nach der Regel umso l\u00e4nger und beschwerlich der Weg, umso mehr Kosten entstehen auf dem Weg. Somit m\u00fcsste ja der schnellste Weg, der k\u00fcrzere und Kostenunaufwendigere Weg daf\u00fcr genutzt werden. Mit der Kostendefinition von Ports k\u00f6nnen somit Kalkulationen erstellt werden um den k\u00fcrzesten Weg zu einer RootBridge herstellen zu k\u00f6nnen. hier mal ein Beispiel mit dem Kruskal Algorithmus wie die Kosten Einfluss auf ein Spanning Tree haben kann:</p> <p>In diesem Beispiel sieht man wie alle Knoten miteinander verbunden sind. Alle Knotenverbindungen definieren ihre Kosten mit einer Zahl, dabei spielt die Distanz zu den anderen Knoten hier \u00fcberhaupt keine Rolle. Nun sollten alle Knoten \u00fcber den g\u00fcnstigsten Weg miteinander verbunden werden. So k\u00f6nnen wir eine gespannte Baumstruktur zwischen allen Knotenpunkten herstellen. Bei Spanning Tree w\u00fcrden somit nur die Leitungen aktiv erhalten bleiben welche f\u00fcr eine nicht-kreisf\u00f6rmige Konstellation ben\u00f6tigt werden.</p> <p>Die IEEE standardisierte die Pfadkosten f\u00fcr Ports anhand der \u00dcbertragungsgeschwindigkeiten. Schnellere Ports kosten weniger, langsame Ports kosten mehr. Hier eine Abbildung der von der IEEE802.X definierten Path Cost:</p> Bandbreite Originale STP Kosten IEEE802.1D Neue STP Kosten IEEE802.1w 4 Mbit/s 250 5'000'000 10 Mbit/s 100 2'000'000 16 Mbit/s 62 1'250'000 100 Mbit/s 19 200'000 1 Gbit/s 4 20'000 2 Gbit/s 3 10'000 10 Gbit/s 2 2'000 100 Gbit/s N/A 200 1Tbit/s N/A 20 <p>Beachte die alten Definitionen der Kosten gegen\u00fcber den Neuen Definitionen. Dies sind nur Vorgaben von IEEE und k\u00f6nnen auf jeden Fall f\u00fcr jeden Port angepasst werden um allenfalls die Baumkonstelation selbst anzupassen.</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#root-bridge","title":"Root Bridge","text":"<p>Die Root Bridge in einer Spanning Tree Konstellation ist der Switch mit der kleinsten Bridge ID. Die Bridge ID ein 8-Byte grosses Feld in einem BPDU Frame und wird aufgebaut aus der Priorit\u00e4t und der Mac-Adresse eines Switches. Die Root Bridge dient als Referenzpunk f\u00fcr alle anderen im Spanning Tree angeschlossenen Switches und dient als zentraler Ausgangspunkt eines Spanning Tree. Als einziger Switch in der Baumstruktur kann bei der Root Bridge kein Port mittels STP augeschaltet werden um die Redundanz sicherzustellen, ausser nat\u00fcrlich bei einem internet Loop. Eine Root Bridge wird in einem spanning tree Netzwerk mit einem Verfahren ermittelt. Die Root Bridge kann im Auschlussverfahren so definiert werden:</p> <ol> <li>Hat der Switch die kleinste Priorit\u00e4t (4096), dann ist dieser Switch automatisch die Root Bridge in einem Spanning Tree</li> <li>Falls &gt;2 Switches die kleinste Priorit\u00e4t aufweisen, dann ist der Switch mit der kleinsten Priorit\u00e4t und der kleinsten MAC-Adresse die Root Bridge</li> </ol>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#arten-von-ports-in-einem-spanning-tree","title":"Arten von Ports in einem Spanning Tree","text":"<p>Um zu verstehen wie die Switches in einer Spanning Tree Konstellation die auschzuschaltenden Ports definieren, m\u00fcssen folgende Portdefinitionen erkl\u00e4rt werden:</p> <ul> <li>Designated Port</li> <li>Root Port</li> <li>Blocked Port</li> </ul>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#designated-port","title":"Designated Port","text":"<p>Dem designated Port ist es erlaubt Daten mit anderen Switches auszutauschen Frames weiterzuleiten. In einer Root Bridge sind alle Ports designated Ports und kann im Normalfall auch nicht ge\u00e4ndert werden.</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#root-port","title":"Root Port","text":"<p>Ein Root Port ist der Anschluss welches in Richtung einer Root Bridge gef\u00fchrt ist. Ein Root Port ist somit immer mit einem Designated Port verbunden. Der Zustand eines Root Ports startet immer in einem Listening State</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#blocked-port","title":"Blocked Port","text":"<p>Ein Port welches nach der Spanning Tree Toplogie nicht f\u00fcr eine Verbindung vorgesehen ist. BPDUs werden immer noch ausgetausch, jedoch keine Nutzdaten. Ein Blocked Port ist wie der Root Port auch mit einem Designated Port verbunden.</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#spanning-tree-portzustande","title":"Spanning Tree Portzust\u00e4nde","text":"<p>In einem Spanning Tree sind potenzielle Schleifen nicht gleich komplett ausgeschaltet. Sie \u00fcbermitteln aber keine Nutzdaten wie Ethernet Frames. Dabei tauschen alle Ports weiterhin BPDUs, welche den aktuellen Zustand von benachbarten Switches anhand von Statusver\u00e4nderungen verstehen kann. Ein Port kann folgende Zust\u00e4nde haben:</p> Zustand des Ports Beschreibung Disabled Verwirft Frames, lernt keine Adressen, empf\u00e4ngt und verarbeitet keine BPDUs Blocking Verwirft Frames, lernt keine Adressen, empf\u00e4ngt und verarbeitet BPDUs Listening Verwirft Frames, lernt keine Adressen, empf\u00e4ngt, verarbeitet und sendet BPDUs Learning Verwirft Frames, lernt Adressen, empf\u00e4ngt, verarbeitet und sendet BPDUs Forwarding Leitet Frames weiter, lernt Adressen, empf\u00e4ngt, verarbeitet und sendet BPDUs <p>Die Zust\u00e4nde Blocking, Listening, Learning sind Zust\u00e4nde von blocked Ports. Ports welche inaktiv sind in der Regel blocking. Wird ein Port aktiv, durchl\u00e4uft dieser Port alle Zust\u00e4nde bis zum Forwarding Zustand, Wird aber ein Loop erkannt bleibt dieser Port automatisch im Blocking Zustand und empf\u00e4ngt nur noch BPDUs zur Erkennung von \u00c4nderungen an der Konstellation.</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#ablauf-von-spanning-tree-portstatuswechsel-in-betrieb","title":"Ablauf von Spanning Tree Portstatuswechsel in Betrieb","text":"<p>Es werden 2 Szenarien erkl\u00e4rt um die Wechsel der Zust\u00e4nde verstehen zu k\u00f6nnen und somit feststellen zu k\u00f6nnen wie Spanning Tree funktioniert.</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#szenario-1-netzwerkgerat-wird-in-einen-switch-eingesteckt","title":"Szenario 1: Netzwerkger\u00e4t wird in einen Switch eingesteckt","text":"<p>Wenn ein Netzwerkger\u00e4t an einen Switch mit Spanning Tree gekn\u00fcpft wird, durchl\u00e4uft der Port die oben beschriebenenen Zust\u00e4nde. Der Port startet von Anfang an im Blocking State und versucht BPDUs zu empfangen, werden als erstes keine BPDUs empfangen, versucht der Port in den Listening State \u00fcberzugehen und sendet eigene BPDUs mit Feldern Priorit\u00e4t und Bridge ID. Falls auch dann keine Antwort in Form von BPDUs zur\u00fcckkommt geht der Port in den Learning State \u00fcber und empf\u00e4ngt die Mac-Adresse des Ger\u00e4ts und bei Erfolg wird der Port in den Forwarding Zustand gehoben. Das Endger\u00e4t kann nun im Netzwerk kommunizieren und Broadcasts verschicken.</p>"},{"location":"02_Data-Link_Layer/Spanning_Tree/#szenario-2-netzwerkswitch-wird-an-einen-anderen-switch-eingesteckt","title":"Szenario 2: Netzwerkswitch wird an einen anderen Switch eingesteckt","text":"<p>Wenn 2 mit Spanning Tree konfigurierten Switches miteinander verbunden \u00e4ndert sich die ganze Spanning Tree von alleine und durchl\u00e4uft mehrere Schritte um den Spanning Tree aufrecht zu halten.</p> <p>Beide Switches nehmen zuerst an sie seien die Root Bridge solange bis sie miteinander verbunden werden. Bei beiden Switches starten die entsprechenden Ports im Blocking Zustand und danach in den Listening Zustand. Nun \u00fcbertragen beide Switches ihre Bridge ID und k\u00f6nnen nun anhand des oben gennanten Verfahrens ausmachen welcher Switch nun die Root Bridge ist. Nachdem die Root Bridge auserw\u00e4hlt wurde, wird automatisch der Port an der Root Bridge zu einem Designated Port und der Port der nicht-Root Bridge zu einem Root Port. </p>"},{"location":"02_Data-Link_Layer/WIFI/","title":"WIFI","text":"<p>WIFI - auch bekannt als IEEE 802.11 schaffte die Standartisierung der Funk\u00fcbertragung in einem Ethernetf\u00e4higen Netzwerk. Technisch gesehen ist 802.11 eigentlich eine Layer 1 Spezifikation, schafft aber so auch eine Schnittstelle f\u00fcr die Ethernet Kommunikation auf Layer 2. Darum bekommt WIFI ein eigenes Kapitel, welches n\u00e4her den Fokus auf praktische Tipps und die technischen Aspekte der elektromagnetischen Eigenschaften setzt.</p>"},{"location":"02_Data-Link_Layer/WIFI/#geschichte-zu-ieee-80211","title":"Geschichte zu IEEE 802.11","text":"<p>IEEE 802.11 ist eine Normenfamilie f\u00fcr WLAN. Die Normen beschreiben den Zugriff auf ein Netzwerk auf Basis von Luft\u00fcbertragungsmedien, im spezifischen mit elektromagnetischen Wellen. 1997 wurde die erste Norm ver\u00f6ffentlicht und seit 2018 wurden spezifische Branchenbeziechnung WIFI 4, WIFI 5 und WIFI 6 zur Vereinfachung der Vermarktung eingef\u00fchrt. In den Normen werden die Verfahren beschrieben mit welche Daten \u00fcber EM-Wellen moduliert werden und \u00fcber Multiplexingverfahren f\u00fcr Mehrkanal\u00fcbertragungen, sowie die Festlegung der Frequenzb\u00e4nder. Bekannte Modulationsverfahren sind heutzutage:</p> <ul> <li>OFDM (Orthogonal Frequency-Division Multiplexing)</li> <li>OFDMA (Orthogonal Frequency-Division Mutiple Access)</li> <li>DSSS (Direct Sequence Spreac Spectrum)</li> </ul> <p>Speziell den Fokus legen wir hier auf OFDM bzw. OFDMA.</p>"},{"location":"02_Data-Link_Layer/WIFI/#normen-im-detail","title":"Normen im Detail","text":"<p>Die verschiedenen Unternormen zu IEEE 802.11 sind \u00fcber die Jahre entstanden und die heutigen Normen haben m\u00f6glichst versucht die R\u00fcckw\u00e4rtskompatibilit\u00e4t zu \u00e4lteren Normen beizubehalten, doch einige Aspekte mussten in Folge von technischen Durchbr\u00fcchen durch neuere Modulationsverfahren, schenllere \u00dcbertragungsraten oder besseren Sicherheitsanforderungen standhalten. Firmen welche ihre Endger\u00e4te WLAN-tauglich verkaufen wollen, m\u00fcssen sich an die Zielnormen halten und k\u00f6nnen sich bei der Zertifizierung sogar als WIFI Certified beziechnen. Die klassischen IEEE 802.11 Standards wurden seit 2018 mit ihren einfachen Versionsnamen f\u00fcr die breite Masse \u00fcbersetzt.</p> <p>Mit den verschiedenen Frequenzb\u00e4ndern, vorallem in neuen WLAN-Netzwerken, kann die Kompatibilit\u00e4t f\u00fcr \u00e4ltere oder sendearme Endger\u00e4te auf ein 2.4GHz Band festgelegt werden und die Endger\u00e4te mit erh\u00f6htem Datenverkehr mit dem schnelleren 5 GHz Frequenband verbinden. Die \u00dcbertragung erfolgt auf den beiden Frequenzb\u00e4ndern separat, da die \u00dcbertragung in den meisten F\u00e4llen \u00fcber separate Antennen ausgestrahlt werden.</p>"},{"location":"02_Data-Link_Layer/WIFI/#sender-und-empfanger","title":"Sender und Empf\u00e4nger","text":"<p>In den letzten Jahren sind die Anzahl an WLAN f\u00e4higen Ger\u00e4ten stark gestiegen. im Jahr 2022 wurden 4.4 Milliarden Endger\u00e4te welche durch die WIFI-Alliance zertifiziert wurden weltweit verkauft. Seit beginn der WIFI-Alliance im Jahr 1999 wurden bislang 18 Milliarden WLAN-f\u00e4hige Ger\u00e4te verkauft. Die meisten dieser Ger\u00e4te bilden Empf\u00e4ngerger\u00e4te. Doch die Anzahl an Sendeger\u00e4ten steigt stark weiter. Manche Ger\u00e4te bieten ja sogar die Funktionalit\u00e4t f\u00fcr Senden oder emfpangen von WLAN-Signalen (Smartphones, etc.), somit ist die klare  Unterscheidung der Spezifikationen f\u00fcr Sender und Empf\u00e4ngerger\u00e4te und deren Unterschiedliche Implementation wichtig. Man sollte in diesem Fall klar unterscheiden zwischen dem eigentlichen Senden und Empfangen von Daten und der eigentlichen Funktionalit\u00e4t eines WIFI-konformen Endger\u00e4ts. Beide Endger\u00e4tetypen k\u00f6nnen Senden und Empfangen, vorgesehen sind sie aber f\u00fcr andere Dienstzwecke. Aber nur Sendeger\u00e4te strahlen aktiv WLAN-Signale aus, die anderen Endger\u00e4te \u00fcbertragen nutzen das bestehende Signal als Tr\u00e4ger f\u00fcr Nutzdaten.</p> <p>Auch WLAN f\u00e4hige Ger\u00e4te besitzen eine oder mehrere MAC-Adressen, unabh\u00e4ngig ob diese nun Sender oder Empf\u00e4nger sind. Empf\u00e4ngerger\u00e4te sind die Schnittstelle zu einem Layer-2 Netzwerk f\u00fcr Ethernet und Empf\u00e4nger\u00e4te k\u00f6nnen dann \u00fcber die Sende\u00fcbertragung \u00fcber diese Umwandlung mit \u00fcber Ethernet auf Netzwerkger\u00e4te im gesamten Netzwerk sich verbinden. </p>"},{"location":"02_Data-Link_Layer/WIFI/#sender","title":"Sender","text":"<p>Fast \u00fcberall wo ein Geb\u00e4ude, ein Kampus, oder ein Haus steht, wird sicher mit WLAN ein kabelloses Netzwerk seinen Platz haben. Die Art und Form wie die WIFI-Landschaft aufgabaut ist, kann sehr unterschiedlich umgesetzt sein. In einer Wohnung oder bei kleineren Betrieben, k\u00f6nnen bekannterweise Internetrouter schon die Funktion eines WLAN-Senders \u00fcbernehmen. Bei gr\u00f6sseren Fl\u00e4chen und komplexeren Bauten werden meistens mit WLAN Access Points oder Repeater gearbeitet und eine gen\u00fcgende \u00f6rtliche Abdeckung zu gew\u00e4hrleisten. Access Points und Repeater werden \u00fcber ein normales kabelgebundenes Netzwerk betrieben und besitzen eine eigene Stromversorgung. F\u00fcr die Stromversorgung kann entweder ein separates Netzteil verwendet werden oder \u00fcber Switches mit PoE Funktionalit\u00e4t \u00fcber das bereits verwendete Netzwerkkabel mit Strom versorgt werden. Mittels einem \u00fcber den Access Point zur Verf\u00fcgung gestellten Webinterface k\u00f6nnen die Einstellungen wie SSID, \u00dcbertragungsfrequenzen und Frequenzb\u00e4nder und weitere Paramter angepasst werden. Bei einer Vielzahl an WLAN-Sendern ist es wichtig dass alle Sender zentral verwaltet werden. Bei industriellen WIFI-Produktelinien kann in diesem Fall ein WLAN-Controller bei der Verwaltung eine Hilfe sein. Dies sind herstellerabh\u00e4ngige Merkmale und m\u00fcssen somit f\u00fcr den Einsatz m\u00f6glichst richtig evaluiert werden.</p>"},{"location":"02_Data-Link_Layer/WIFI/#empfanger","title":"Empf\u00e4nger","text":"<p>Die klassischen Empf\u00e4ngerger\u00e4te heutzutage k\u00f6nnen kurz zusammengefasst werden in: </p> <ul> <li>Smartphones</li> <li>Notebooks</li> <li>Tablets</li> <li>Wearables (Smartwatch, etc.)</li> <li>TV</li> </ul> <p>Doch auch schon in den Bereichen von IoT wird h\u00e4ufiger auf WLAN gesetzt. Empf\u00e4ngerger\u00e4te k\u00f6nnen klassischer Weisse als Verbraucher in betrachtet werden und sorgen nicht f\u00fcr die Ausstrahlung von WLAN-Netzwerken, nutzen daher die bestehenden ausgestrahlten Signale zur Daten\u00fcbermittlung. Somit sind Empf\u00e4ngerger\u00e4te von einem ausgestrahlten WLAN-Netzwerk abh\u00e4ngig. Ausgestrahlte Netzwerke k\u00f6nnen dann von Empf\u00e4ngerger\u00e4ten aufgenommen werden und mittels Authentifizierungsverfahren mit diesem ausgestrahlten WLAN-Netzwerk verbunden werden. </p>"},{"location":"02_Data-Link_Layer/WIFI/#technische-aspekte-fur-die-integration-und-inbetriebnahme","title":"Technische Aspekte f\u00fcr die Integration und Inbetriebnahme","text":"<p>Nun genug von Normen. Unabh\u00e4ngig wie stark die Ausstrahlung oder ob der Access Point WIFI-6 tauglich w\u00e4re oder nicht, gibt es klare Parameter, Ausdr\u00fccke und Definitionen welche auf ein WLAN-Netzwerk zutreffen und mit unseren Endger\u00e4ten verwendet werden kann um ein WLAN Netzwerk herszustellen, sich damit zu verbinden und die Verbindung sicherzustellen. </p> <p>Ein WLAN-Netzwerk hat folgende technische Eigenschaften:</p> <ul> <li>Ein WLAN kann nur in einer Broadcast-Dom\u00e4ne sein</li> <li>Ein WLAN besitzt eine SSID =&gt; ausgestrahlte Identifikation des ausgestrahlten Netzwerks</li> <li>Ein WLAN kann Passwortgesch\u00fctzt sein. Bekannte Authentifizierungsverfahren sind WPA2, WPA3, WPA-Enterprise</li> <li>Ein Access Point kann auch mehrere WLANs austrahlen und mit diesen WLANs in mehreren Broadcastdom\u00e4nen sein =&gt; siehe VLAN</li> </ul>"},{"location":"03_Network_Layer/","title":"Network Layer","text":"<p>Der Network Layer (deutsch. Netzwerk Layer) haust mehrere Protokolle mit sich und definiert die 3. Schicht im OSI Model und die 2. Schicht im TCP/IP Model. Die bekannten Protokolle unter den Layer-3 Protokollen ist ganz klar das IP-Protokol. Doch auch mit ICMP, IGMP und ARP wurden Protokolle definiert, mit denen wir tagt\u00e4glich in Ber\u00fchrung kommen ohne es zu merken. Hier eine Liste mit weiteren namenswerten Protokollen</p> <ul> <li>NAT</li> <li>VRRP</li> <li>HSRP</li> <li>OSPF</li> <li>IPSEC</li> </ul> <p>Befassen werden wir uns mit den Protokollen:</p> <ul> <li>Internet Protocol</li> <li>Adress Resolution Protocol (ARP)</li> <li>Internet Cotnrol Message Protocol (ICMP)</li> <li>Network Adress Resolution (NAT)</li> <li>VRRP und HSRP</li> </ul>"},{"location":"03_Network_Layer/Internet_Protocol/","title":"Internet Protocol","text":"<p>Das Internetprotokol ist das meistverbreitete Protokol unter den Netzwerkprotokollen und stellt somit die Grundlage f\u00fcr unser Internet dar. Durch das IP-Protokol wird die \u00dcbertragungs \u00fcber weite gespannte Netzwerke vereinfacht und mit Rounting sichergestellt, dass IP-Pakete an die richtige Stelle weitergeleitet werden.</p> <p>In einem IP-Netzwerk werden keine Frames, sondern Pakete gesendet. Dieser Ausdruck wird zur Unterscheidung der einzelnen Layer-Komponenten verwendet und somit wissen Netzwerkadministratoren auf Anhieb ob man von Switching- oder Routing-Thematiken redet. Das IP-Protokol gibt es in 2 Varianten und wird werden auf ersteres besonderen Wert legen. IPv4 und IPv6. IPv4 gibt es schon seit 1981 und ist bis jetzt immernoch weiter verbreitet als der j\u00fcngere Standard.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#aufbau-eines-ip-pakets","title":"Aufbau eines IP-Pakets","text":"<p>Das IP-Paket ist in 2 Teile aufgeteilt. Den Header und den Payload. Der Header ist der Teil des Pakets, welcher die Informationen \u00fcber das Paket beinhaltet. Der Payload ist der Teil des Pakets, welcher die Daten beinhaltet welche \u00fcbertragen werden sollen.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#version","title":"Version","text":"<p>Die Version gibt an, um welche Version des IP-Protokols es sich handelt.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#ihl","title":"IHL","text":"<p>Das Internet Header Length (IHL) Feld beschreibt die L\u00e4nge des Headers in 32 Bit W\u00f6rtern. Das heisst, wenn das IHL Feld den Wert 5 hat, dann ist die L\u00e4nge des Headers 5x32 Bit gross.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#type-of-service","title":"Type of Service","text":"<p>Das Type of Service Feld beschreibt die Art des Service. Dieses Feld wird heute nicht mehr verwendet und ist nur noch f\u00fcr Kompatibilit\u00e4tszwecke vorhanden.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#total-length","title":"Total Length","text":"<p>Das Total Length Feld beschreibt die Gesamtl\u00e4nge des IP-Pakets. Das heisst, wenn das IP-Paket eine Gesamtl\u00e4nge von 1500 Bytes hat, dann ist das Total Length Feld 1500 Bytes gross. Dieses Feld kennt man auch als Maximum Transmission Unit (MTU)</p>"},{"location":"03_Network_Layer/Internet_Protocol/#identification","title":"Identification","text":"<p>Das Identification Feld beschreibt die Identifikation des IP-Pakets. Dieses Feld wird f\u00fcr die Fragmentierung und die Defragmentierung des Payloads verwendet. So k\u00f6nnen mehrere IP-Pakete wieder zusammengef\u00fchrt werden, wenn alle angekommen sind.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#flags","title":"Flags","text":"<p>Das Flags Feld beschreibt den Status der Fragmentierung. Damit wird sichergestellt ob dieses Paket fragmentiert werden kann, oder ob dies das Ende des Fragments ist.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#fragment-offset","title":"Fragment Offset","text":"<p>Beschreibt die Position im Fragment und kennzeichnet die Positoon im orgininalen Paket.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#time-to-live","title":"Time to Live","text":"<p>Das Time to Live Feld beschreibt die Lebensdauer des IP-Pakets. Wird verwendet um die Lebensdauer eines IP-Pakets festzustellen. So wird sichergestellt, dass IP-Pakete nicht unendlich lange weiterversendet werden. Bei jedem durchwandern eines IP-Pakets durch einen Router, wird dieser Wert um 1 verringert. wenn das Time To Live 0 erreicht, wird es vom empfangenen Router abgeworfen und nicht mehr weiterverarbeitet.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#protocol","title":"Protocol","text":"<p>Das Protocol Feld beschreibt das dar\u00fcberliegende Protokol. Das heisst, wenn ein IP-Paket an ein Ger\u00e4t gesendet wird, muss dieses Ger\u00e4t wissen, wie es das IP-Paket verarbeiten soll. Daf\u00fcr wird das Protocol Feld verwendet. Meistens wird da ein Wert f\u00fcr TCP oder UDP verwendet.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#header-checksum","title":"Header Checksum","text":"<p>Das Header Checksum Feld pr\u00fcft wie bei einer CRC Checksumme die Richtigkeit eines IP-Pakets und kann bei einem Fehler, ein Wiedersenden des Pakets anfordern.</p>"},{"location":"03_Network_Layer/Internet_Protocol/#source-und-destination-address","title":"Source und Destination Address","text":"<p>In den Source- und Destionationfeldern sind schliesslich die Sender und Empf\u00e4ngeradressen eingetragen. Diese helfen dem Router die IP-Pakete in die richtigen Subnetze weiterzuschicken. </p>"}]}